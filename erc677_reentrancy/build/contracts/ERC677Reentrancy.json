{
  "contractName": "ERC677Reentrancy",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor",
      "payable": true
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lock_times",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "transferAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "vuln",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lock_times\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"vuln\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"transfer token to a contract address with additional data if the recipient is a contact.\",\"params\":{\"_data\":\"The extra data to be passed to the receiving contract.\",\"_to\":\"The address to transfer to.\",\"_value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/neo/blockfuck/git/all_reentrancy_in_one_repo/erc677_reentrancy/contracts/vuln_contract.sol\":\"ERC677Reentrancy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/neo/blockfuck/git/all_reentrancy_in_one_repo/erc677_reentrancy/contracts/ERC677/ERC677.sol\":{\"keccak256\":\"0xaab41d42f38a0b2c632112761ac3bfcf03d055db874923e970b0368a1819c013\",\"urls\":[\"bzz-raw://6ad99ab7fa580a6d0bee7c3849082a408063d4e091fd06427845719ec52190fb\",\"dweb:/ipfs/QmUAXRtKHVVDyjbXPGH5j16MF6AzxMhmZrutFhWESnpTKs\"]},\"/home/neo/blockfuck/git/all_reentrancy_in_one_repo/erc677_reentrancy/contracts/ERC677/ERC677Receiver.sol\":{\"keccak256\":\"0xf935f01007791f2e020b00cc6649125cd3d187617e073821ba7d982fdb314df1\",\"urls\":[\"bzz-raw://5432a485fd351d508b71b07f75c04a7114bf57fd75c45dfa843b025d1054e09d\",\"dweb:/ipfs/QmeiohSk7MterCBTyJ5vqUjWrMh1iQNVBZjtPG3rBCJDVb\"]},\"/home/neo/blockfuck/git/all_reentrancy_in_one_repo/erc677_reentrancy/contracts/ERC677/ERC677Token.sol\":{\"keccak256\":\"0xdcd62c093ed32670dfe8a26f1c3de8f9fa279992c014407cb8c0d59b3f684389\",\"urls\":[\"bzz-raw://6c1f1237a0577fa3aa64798690dd21a95323dbe1d77b995bf4833c4e7e0199ed\",\"dweb:/ipfs/QmbVzc6ZR1wrCLaHgYkFiEqZse6vUCo42jB6rnWtkKo2UN\"]},\"/home/neo/blockfuck/git/all_reentrancy_in_one_repo/erc677_reentrancy/contracts/vuln_contract.sol\":{\"keccak256\":\"0x2d1ce99903c9584aa0ae210574182b165166e31803e320eb550566f32c8621c4\",\"urls\":[\"bzz-raw://2fe8c9307b55a2da1c3c0c9b4f017c1fa4fa7002443414059ede869479a98421\",\"dweb:/ipfs/QmfLkndFRQ1mAacyrBhftXqXcJs6goXnPNuTpBLLd27qDf\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "bytecode": "0x60806040526040518060400160405280601081526020017f4552433636375265656e7472616e6379000000000000000000000000000000008152506040518060400160405280600581526020017f45363637520000000000000000000000000000000000000000000000000000008152508181818181600390805190602001906200008c92919062000247565b508060049080519060200190620000a592919062000247565b50505050505050620000be3334620000c460201b60201c565b620004a3565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000137576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200012e906200032f565b60405180910390fd5b6200014b600083836200023d60201b60201c565b80600260008282546200015f91906200037f565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620001b691906200037f565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200021d919062000351565b60405180910390a362000239600083836200024260201b60201c565b5050565b505050565b505050565b8280546200025590620003e6565b90600052602060002090601f016020900481019282620002795760008555620002c5565b82601f106200029457805160ff1916838001178555620002c5565b82800160010185558215620002c5579182015b82811115620002c4578251825591602001919060010190620002a7565b5b509050620002d49190620002d8565b5090565b5b80821115620002f3576000816000905550600101620002d9565b5090565b600062000306601f836200036e565b915062000313826200047a565b602082019050919050565b6200032981620003dc565b82525050565b600060208201905081810360008301526200034a81620002f7565b9050919050565b60006020820190506200036860008301846200031e565b92915050565b600082825260208201905092915050565b60006200038c82620003dc565b91506200039983620003dc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620003d157620003d06200041c565b5b828201905092915050565b6000819050919050565b60006002820490506001821680620003ff57607f821691505b602082108114156200041657620004156200044b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b611ac280620004b36000396000f3fe6080604052600436106100e85760003560e01c806370a082311161008a578063a9059cbb11610059578063a9059cbb14610344578063d0e30db014610381578063dd62ed3e1461038b578063e3bb15f0146103c8576100e8565b806370a082311461026257806391cbc4781461029f57806395d89b41146102dc578063a457c2d714610307576100e8565b806323b872dd116100c657806323b872dd14610180578063313ce567146101bd57806339509351146101e85780634000aea014610225576100e8565b806306fdde03146100ed578063095ea7b31461011857806318160ddd14610155575b600080fd5b3480156100f957600080fd5b506101026103f1565b60405161010f919061141a565b60405180910390f35b34801561012457600080fd5b5061013f600480360381019061013a919061111f565b610483565b60405161014c91906113ff565b60405180910390f35b34801561016157600080fd5b5061016a6104a6565b604051610177919061153c565b60405180910390f35b34801561018c57600080fd5b506101a760048036038101906101a291906110cc565b6104b0565b6040516101b491906113ff565b60405180910390f35b3480156101c957600080fd5b506101d26104df565b6040516101df9190611587565b60405180910390f35b3480156101f457600080fd5b5061020f600480360381019061020a919061111f565b6104e8565b60405161021c91906113ff565b60405180910390f35b34801561023157600080fd5b5061024c6004803603810190610247919061115f565b61051f565b60405161025991906113ff565b60405180910390f35b34801561026e57600080fd5b506102896004803603810190610284919061105f565b6105b8565b604051610296919061153c565b60405180910390f35b3480156102ab57600080fd5b506102c660048036038101906102c1919061105f565b610600565b6040516102d3919061153c565b60405180910390f35b3480156102e857600080fd5b506102f1610618565b6040516102fe919061141a565b60405180910390f35b34801561031357600080fd5b5061032e6004803603810190610329919061111f565b6106aa565b60405161033b91906113ff565b60405180910390f35b34801561035057600080fd5b5061036b6004803603810190610366919061111f565b610721565b60405161037891906113ff565b60405180910390f35b610389610744565b005b34801561039757600080fd5b506103b260048036038101906103ad919061108c565b610750565b6040516103bf919061153c565b60405180910390f35b3480156103d457600080fd5b506103ef60048036038101906103ea91906111ce565b6107d7565b005b6060600380546104009061171d565b80601f016020809104026020016040519081016040528092919081815260200182805461042c9061171d565b80156104795780601f1061044e57610100808354040283529160200191610479565b820191906000526020600020905b81548152906001019060200180831161045c57829003601f168201915b5050505050905090565b60008061048e6108ee565b905061049b8185856108f6565b600191505092915050565b6000600254905090565b6000806104bb6108ee565b90506104c8858285610ac1565b6104d3858585610b4d565b60019150509392505050565b60006012905090565b6000806104f36108ee565b90506105148185856105058589610750565b61050f9190611630565b6108f6565b600191505092915050565b600061052b8484610721565b508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16858560405161058b929190611557565b60405180910390a361059c84610dce565b156105ad576105ac848484610de1565b5b600190509392505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60056020528060005260406000206000915090505481565b6060600480546106279061171d565b80601f01602080910402602001604051908101604052809291908181526020018280546106539061171d565b80156106a05780601f10610675576101008083540402835291602001916106a0565b820191906000526020600020905b81548152906001019060200180831161068357829003601f168201915b5050505050905090565b6000806106b56108ee565b905060006106c38286610750565b905083811015610708576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ff906114fc565b60405180910390fd5b61071582868684036108f6565b60019250505092915050565b60008061072c6108ee565b9050610739818585610b4d565b600191505092915050565b61074e3334610e5b565b565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6107e0336105b8565b8110156107ec57600080fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541480610878575042600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054105b156108eb5761089733826040518060200160405280600081525061051f565b5062093a80426108a79190611630565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610966576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095d906114dc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109cd9061145c565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610ab4919061153c565b60405180910390a3505050565b6000610acd8484610750565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610b475781811015610b39576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b309061147c565b60405180910390fd5b610b4684848484036108f6565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610bbd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb4906114bc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c249061143c565b60405180910390fd5b610c38838383610fbb565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610cbe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb59061149c565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d519190611630565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610db5919061153c565b60405180910390a3610dc8848484610fc0565b50505050565b600080823b905060008111915050919050565b60008390508073ffffffffffffffffffffffffffffffffffffffff1663a4c0ed363385856040518463ffffffff1660e01b8152600401610e23939291906113c1565b600060405180830381600087803b158015610e3d57600080fd5b505af1158015610e51573d6000803e3d6000fd5b5050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ecb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec29061151c565b60405180910390fd5b610ed760008383610fbb565b8060026000828254610ee99190611630565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f3e9190611630565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610fa3919061153c565b60405180910390a3610fb760008383610fc0565b5050565b505050565b505050565b6000610fd8610fd3846115c7565b6115a2565b905082815260208101848484011115610ff457610ff3611812565b5b610fff8482856116db565b509392505050565b60008135905061101681611a5e565b92915050565b600082601f8301126110315761103061180d565b5b8135611041848260208601610fc5565b91505092915050565b60008135905061105981611a75565b92915050565b6000602082840312156110755761107461181c565b5b600061108384828501611007565b91505092915050565b600080604083850312156110a3576110a261181c565b5b60006110b185828601611007565b92505060206110c285828601611007565b9150509250929050565b6000806000606084860312156110e5576110e461181c565b5b60006110f386828701611007565b935050602061110486828701611007565b92505060406111158682870161104a565b9150509250925092565b600080604083850312156111365761113561181c565b5b600061114485828601611007565b92505060206111558582860161104a565b9150509250929050565b6000806000606084860312156111785761117761181c565b5b600061118686828701611007565b93505060206111978682870161104a565b925050604084013567ffffffffffffffff8111156111b8576111b7611817565b5b6111c48682870161101c565b9150509250925092565b6000602082840312156111e4576111e361181c565b5b60006111f28482850161104a565b91505092915050565b61120481611686565b82525050565b61121381611698565b82525050565b6000611224826115f8565b61122e818561160e565b935061123e8185602086016116ea565b61124781611821565b840191505092915050565b600061125d82611603565b611267818561161f565b93506112778185602086016116ea565b61128081611821565b840191505092915050565b600061129860238361161f565b91506112a382611832565b604082019050919050565b60006112bb60228361161f565b91506112c682611881565b604082019050919050565b60006112de601d8361161f565b91506112e9826118d0565b602082019050919050565b600061130160268361161f565b915061130c826118f9565b604082019050919050565b600061132460258361161f565b915061132f82611948565b604082019050919050565b600061134760248361161f565b915061135282611997565b604082019050919050565b600061136a60258361161f565b9150611375826119e6565b604082019050919050565b600061138d601f8361161f565b915061139882611a35565b602082019050919050565b6113ac816116c4565b82525050565b6113bb816116ce565b82525050565b60006060820190506113d660008301866111fb565b6113e360208301856113a3565b81810360408301526113f58184611219565b9050949350505050565b6000602082019050611414600083018461120a565b92915050565b600060208201905081810360008301526114348184611252565b905092915050565b600060208201905081810360008301526114558161128b565b9050919050565b60006020820190508181036000830152611475816112ae565b9050919050565b60006020820190508181036000830152611495816112d1565b9050919050565b600060208201905081810360008301526114b5816112f4565b9050919050565b600060208201905081810360008301526114d581611317565b9050919050565b600060208201905081810360008301526114f58161133a565b9050919050565b600060208201905081810360008301526115158161135d565b9050919050565b6000602082019050818103600083015261153581611380565b9050919050565b600060208201905061155160008301846113a3565b92915050565b600060408201905061156c60008301856113a3565b818103602083015261157e8184611219565b90509392505050565b600060208201905061159c60008301846113b2565b92915050565b60006115ac6115bd565b90506115b8828261174f565b919050565b6000604051905090565b600067ffffffffffffffff8211156115e2576115e16117de565b5b6115eb82611821565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061163b826116c4565b9150611646836116c4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561167b5761167a611780565b5b828201905092915050565b6000611691826116a4565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b838110156117085780820151818401526020810190506116ed565b83811115611717576000848401525b50505050565b6000600282049050600182168061173557607f821691505b60208210811415611749576117486117af565b5b50919050565b61175882611821565b810181811067ffffffffffffffff82111715611777576117766117de565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b611a6781611686565b8114611a7257600080fd5b50565b611a7e816116c4565b8114611a8957600080fd5b5056fea26469706673582212200bcb26016de58a1813b90b609df8f33728bc19086a306a2b990ab3f0a8c6529a64736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106100e85760003560e01c806370a082311161008a578063a9059cbb11610059578063a9059cbb14610344578063d0e30db014610381578063dd62ed3e1461038b578063e3bb15f0146103c8576100e8565b806370a082311461026257806391cbc4781461029f57806395d89b41146102dc578063a457c2d714610307576100e8565b806323b872dd116100c657806323b872dd14610180578063313ce567146101bd57806339509351146101e85780634000aea014610225576100e8565b806306fdde03146100ed578063095ea7b31461011857806318160ddd14610155575b600080fd5b3480156100f957600080fd5b506101026103f1565b60405161010f919061141a565b60405180910390f35b34801561012457600080fd5b5061013f600480360381019061013a919061111f565b610483565b60405161014c91906113ff565b60405180910390f35b34801561016157600080fd5b5061016a6104a6565b604051610177919061153c565b60405180910390f35b34801561018c57600080fd5b506101a760048036038101906101a291906110cc565b6104b0565b6040516101b491906113ff565b60405180910390f35b3480156101c957600080fd5b506101d26104df565b6040516101df9190611587565b60405180910390f35b3480156101f457600080fd5b5061020f600480360381019061020a919061111f565b6104e8565b60405161021c91906113ff565b60405180910390f35b34801561023157600080fd5b5061024c6004803603810190610247919061115f565b61051f565b60405161025991906113ff565b60405180910390f35b34801561026e57600080fd5b506102896004803603810190610284919061105f565b6105b8565b604051610296919061153c565b60405180910390f35b3480156102ab57600080fd5b506102c660048036038101906102c1919061105f565b610600565b6040516102d3919061153c565b60405180910390f35b3480156102e857600080fd5b506102f1610618565b6040516102fe919061141a565b60405180910390f35b34801561031357600080fd5b5061032e6004803603810190610329919061111f565b6106aa565b60405161033b91906113ff565b60405180910390f35b34801561035057600080fd5b5061036b6004803603810190610366919061111f565b610721565b60405161037891906113ff565b60405180910390f35b610389610744565b005b34801561039757600080fd5b506103b260048036038101906103ad919061108c565b610750565b6040516103bf919061153c565b60405180910390f35b3480156103d457600080fd5b506103ef60048036038101906103ea91906111ce565b6107d7565b005b6060600380546104009061171d565b80601f016020809104026020016040519081016040528092919081815260200182805461042c9061171d565b80156104795780601f1061044e57610100808354040283529160200191610479565b820191906000526020600020905b81548152906001019060200180831161045c57829003601f168201915b5050505050905090565b60008061048e6108ee565b905061049b8185856108f6565b600191505092915050565b6000600254905090565b6000806104bb6108ee565b90506104c8858285610ac1565b6104d3858585610b4d565b60019150509392505050565b60006012905090565b6000806104f36108ee565b90506105148185856105058589610750565b61050f9190611630565b6108f6565b600191505092915050565b600061052b8484610721565b508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16858560405161058b929190611557565b60405180910390a361059c84610dce565b156105ad576105ac848484610de1565b5b600190509392505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60056020528060005260406000206000915090505481565b6060600480546106279061171d565b80601f01602080910402602001604051908101604052809291908181526020018280546106539061171d565b80156106a05780601f10610675576101008083540402835291602001916106a0565b820191906000526020600020905b81548152906001019060200180831161068357829003601f168201915b5050505050905090565b6000806106b56108ee565b905060006106c38286610750565b905083811015610708576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ff906114fc565b60405180910390fd5b61071582868684036108f6565b60019250505092915050565b60008061072c6108ee565b9050610739818585610b4d565b600191505092915050565b61074e3334610e5b565b565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6107e0336105b8565b8110156107ec57600080fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541480610878575042600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054105b156108eb5761089733826040518060200160405280600081525061051f565b5062093a80426108a79190611630565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610966576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095d906114dc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109cd9061145c565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610ab4919061153c565b60405180910390a3505050565b6000610acd8484610750565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610b475781811015610b39576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b309061147c565b60405180910390fd5b610b4684848484036108f6565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610bbd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb4906114bc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c249061143c565b60405180910390fd5b610c38838383610fbb565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610cbe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb59061149c565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d519190611630565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610db5919061153c565b60405180910390a3610dc8848484610fc0565b50505050565b600080823b905060008111915050919050565b60008390508073ffffffffffffffffffffffffffffffffffffffff1663a4c0ed363385856040518463ffffffff1660e01b8152600401610e23939291906113c1565b600060405180830381600087803b158015610e3d57600080fd5b505af1158015610e51573d6000803e3d6000fd5b5050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ecb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec29061151c565b60405180910390fd5b610ed760008383610fbb565b8060026000828254610ee99190611630565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f3e9190611630565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610fa3919061153c565b60405180910390a3610fb760008383610fc0565b5050565b505050565b505050565b6000610fd8610fd3846115c7565b6115a2565b905082815260208101848484011115610ff457610ff3611812565b5b610fff8482856116db565b509392505050565b60008135905061101681611a5e565b92915050565b600082601f8301126110315761103061180d565b5b8135611041848260208601610fc5565b91505092915050565b60008135905061105981611a75565b92915050565b6000602082840312156110755761107461181c565b5b600061108384828501611007565b91505092915050565b600080604083850312156110a3576110a261181c565b5b60006110b185828601611007565b92505060206110c285828601611007565b9150509250929050565b6000806000606084860312156110e5576110e461181c565b5b60006110f386828701611007565b935050602061110486828701611007565b92505060406111158682870161104a565b9150509250925092565b600080604083850312156111365761113561181c565b5b600061114485828601611007565b92505060206111558582860161104a565b9150509250929050565b6000806000606084860312156111785761117761181c565b5b600061118686828701611007565b93505060206111978682870161104a565b925050604084013567ffffffffffffffff8111156111b8576111b7611817565b5b6111c48682870161101c565b9150509250925092565b6000602082840312156111e4576111e361181c565b5b60006111f28482850161104a565b91505092915050565b61120481611686565b82525050565b61121381611698565b82525050565b6000611224826115f8565b61122e818561160e565b935061123e8185602086016116ea565b61124781611821565b840191505092915050565b600061125d82611603565b611267818561161f565b93506112778185602086016116ea565b61128081611821565b840191505092915050565b600061129860238361161f565b91506112a382611832565b604082019050919050565b60006112bb60228361161f565b91506112c682611881565b604082019050919050565b60006112de601d8361161f565b91506112e9826118d0565b602082019050919050565b600061130160268361161f565b915061130c826118f9565b604082019050919050565b600061132460258361161f565b915061132f82611948565b604082019050919050565b600061134760248361161f565b915061135282611997565b604082019050919050565b600061136a60258361161f565b9150611375826119e6565b604082019050919050565b600061138d601f8361161f565b915061139882611a35565b602082019050919050565b6113ac816116c4565b82525050565b6113bb816116ce565b82525050565b60006060820190506113d660008301866111fb565b6113e360208301856113a3565b81810360408301526113f58184611219565b9050949350505050565b6000602082019050611414600083018461120a565b92915050565b600060208201905081810360008301526114348184611252565b905092915050565b600060208201905081810360008301526114558161128b565b9050919050565b60006020820190508181036000830152611475816112ae565b9050919050565b60006020820190508181036000830152611495816112d1565b9050919050565b600060208201905081810360008301526114b5816112f4565b9050919050565b600060208201905081810360008301526114d581611317565b9050919050565b600060208201905081810360008301526114f58161133a565b9050919050565b600060208201905081810360008301526115158161135d565b9050919050565b6000602082019050818103600083015261153581611380565b9050919050565b600060208201905061155160008301846113a3565b92915050565b600060408201905061156c60008301856113a3565b818103602083015261157e8184611219565b90509392505050565b600060208201905061159c60008301846113b2565b92915050565b60006115ac6115bd565b90506115b8828261174f565b919050565b6000604051905090565b600067ffffffffffffffff8211156115e2576115e16117de565b5b6115eb82611821565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061163b826116c4565b9150611646836116c4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561167b5761167a611780565b5b828201905092915050565b6000611691826116a4565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b838110156117085780820151818401526020810190506116ed565b83811115611717576000848401525b50505050565b6000600282049050600182168061173557607f821691505b60208210811415611749576117486117af565b5b50919050565b61175882611821565b810181811067ffffffffffffffff82111715611777576117766117de565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b611a6781611686565b8114611a7257600080fd5b50565b611a7e816116c4565b8114611a8957600080fd5b5056fea26469706673582212200bcb26016de58a1813b90b609df8f33728bc19086a306a2b990ab3f0a8c6529a64736f6c63430008070033",
  "immutableReferences": {},
  "sourceMap": "60:537:4:-:0;;;119:86:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;188:5;194:7;178:5:0;184:7;2052:5:5;2044;:13;;;;;;;;;;;;:::i;:::-;;2077:7;2067;:17;;;;;;;;;;;;:::i;:::-;;1978:113;;110:85:0;;119:86:2;;225:27:4::1;231:10;242:9;225:5;;;:27;;:::i;:::-;60:537:::0;;8402:389:5;8504:1;8485:21;;:7;:21;;;;8477:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8553:49;8582:1;8586:7;8595:6;8553:20;;;:49;;:::i;:::-;8629:6;8613:12;;:22;;;;;;;:::i;:::-;;;;;;;;8667:6;8645:9;:18;8655:7;8645:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;8709:7;8688:37;;8705:1;8688:37;;;8718:6;8688:37;;;;;;:::i;:::-;;;;;;;;8736:48;8764:1;8768:7;8777:6;8736:19;;;:48;;:::i;:::-;8402:389;;:::o;11786:121::-;;;;:::o;12495:120::-;;;;:::o;60:537:4:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:366:9:-;149:3;170:67;234:2;229:3;170:67;:::i;:::-;163:74;;246:93;335:3;246:93;:::i;:::-;364:2;359:3;355:12;348:19;;7:366;;;:::o;379:118::-;466:24;484:5;466:24;:::i;:::-;461:3;454:37;379:118;;:::o;503:419::-;669:4;707:2;696:9;692:18;684:26;;756:9;750:4;746:20;742:1;731:9;727:17;720:47;784:131;910:4;784:131;:::i;:::-;776:139;;503:419;;;:::o;928:222::-;1021:4;1059:2;1048:9;1044:18;1036:26;;1072:71;1140:1;1129:9;1125:17;1116:6;1072:71;:::i;:::-;928:222;;;;:::o;1156:169::-;1240:11;1274:6;1269:3;1262:19;1314:4;1309:3;1305:14;1290:29;;1156:169;;;;:::o;1331:305::-;1371:3;1390:20;1408:1;1390:20;:::i;:::-;1385:25;;1424:20;1442:1;1424:20;:::i;:::-;1419:25;;1578:1;1510:66;1506:74;1503:1;1500:81;1497:107;;;1584:18;;:::i;:::-;1497:107;1628:1;1625;1621:9;1614:16;;1331:305;;;;:::o;1642:77::-;1679:7;1708:5;1697:16;;1642:77;;;:::o;1725:320::-;1769:6;1806:1;1800:4;1796:12;1786:22;;1853:1;1847:4;1843:12;1874:18;1864:81;;1930:4;1922:6;1918:17;1908:27;;1864:81;1992:2;1984:6;1981:14;1961:18;1958:38;1955:84;;;2011:18;;:::i;:::-;1955:84;1776:269;1725:320;;;:::o;2051:180::-;2099:77;2096:1;2089:88;2196:4;2193:1;2186:15;2220:4;2217:1;2210:15;2237:180;2285:77;2282:1;2275:88;2382:4;2379:1;2372:15;2406:4;2403:1;2396:15;2423:181;2563:33;2559:1;2551:6;2547:14;2540:57;2423:181;:::o;60:537:4:-;;;;;;;",
  "deployedSourceMap": "60:537:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3244:106;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5192:286;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3093:91;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5873:234;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;481:315:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3408:125:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;104:45:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2367:102:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6594:427;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3729:189;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;258:69:4;;;:::i;:::-;;3976:149:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;329:266:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2156:98:5;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;4532:13;4548:12;:10;:12::i;:::-;4532:28;;4570:32;4579:5;4586:7;4595:6;4570:8;:32::i;:::-;4619:4;4612:11;;;4433:197;;;;:::o;3244:106::-;3305:7;3331:12;;3324:19;;3244:106;:::o;5192:286::-;5319:4;5335:15;5353:12;:10;:12::i;:::-;5335:30;;5375:38;5391:4;5397:7;5406:6;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;5467:4;5460:11;;;5192:286;;;;;:::o;3093:91::-;3151:5;3175:2;3168:9;;3093:91;:::o;5873:234::-;5961:4;5977:13;5993:12;:10;:12::i;:::-;5977:28;;6015:64;6024:5;6031:7;6068:10;6040:25;6050:5;6057:7;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;:::-;6096:4;6089:11;;;5873:234;;;;:::o;481:315:2:-;597:12;619:27;634:3;639:6;619:14;:27::i;:::-;;678:3;657:40;;666:10;657:40;;;683:6;691:5;657:40;;;;;;;:::i;:::-;;;;;;;;707:15;718:3;707:10;:15::i;:::-;703:72;;;732:36;749:3;754:6;762:5;732:16;:36::i;:::-;703:72;787:4;780:11;;481:315;;;;;:::o;3408:125:5:-;3482:7;3508:9;:18;3518:7;3508:18;;;;;;;;;;;;;;;;3501:25;;3408:125;;;:::o;104:45:4:-;;;;;;;;;;;;;;;;;:::o;2367:102:5:-;2423:13;2455:7;2448:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2367:102;:::o;6594:427::-;6687:4;6703:13;6719:12;:10;:12::i;:::-;6703:28;;6741:24;6768:25;6778:5;6785:7;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;:::-;7010:4;7003:11;;;;6594:427;;;;:::o;3729:189::-;3808:4;3824:13;3840:12;:10;:12::i;:::-;3824:28;;3862;3872:5;3879:2;3883:6;3862:9;:28::i;:::-;3907:4;3900:11;;;3729:189;;;;:::o;258:69:4:-;296:27;302:10;313:9;296:5;:27::i;:::-;258:69::o;3976:149:5:-;4065:7;4091:11;:18;4103:5;4091:18;;;;;;;;;;;;;;;:27;4110:7;4091:27;;;;;;;;;;;;;;;;4084:34;;3976:149;;;;:::o;329:266:4:-;388:21;398:10;388:9;:21::i;:::-;378:6;:31;;370:40;;;;;;444:1;418:10;:22;429:10;418:22;;;;;;;;;;;;;;;;:27;:71;;;;474:15;449:10;:22;460:10;449:22;;;;;;;;;;;;;;;;:40;418:71;414:178;;;496:37;512:10;523:6;496:37;;;;;;;;;;;;:15;:37::i;:::-;;581:6;563:15;:24;;;;:::i;:::-;538:10;:22;549:10;538:22;;;;;;;;;;;;;;;:49;;;;414:178;329:266;:::o;640:96:8:-;693:7;719:10;712:17;;640:96;:::o;10110:370:5:-;10258:1;10241:19;;:5;:19;;;;10233:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10338:1;10319:21;;:7;:21;;;;10311:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10420:6;10390:11;:18;10402:5;10390:18;;;;;;;;;;;;;;;:27;10409:7;10390:27;;;;;;;;;;;;;;;:36;;;;10457:7;10441:32;;10450:5;10441:32;;;10466:6;10441:32;;;;;;:::i;:::-;;;;;;;;10110:370;;;:::o;10761:441::-;10891:24;10918:25;10928:5;10935:7;10918:9;:25::i;:::-;10891:52;;10977:17;10957:16;:37;10953:243;;11038:6;11018:16;:26;;11010:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10953:243;10881:321;10761:441;;;:::o;7475:651::-;7617:1;7601:18;;:4;:18;;;;7593:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7693:1;7679:16;;:2;:16;;;;7671:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7746:38;7767:4;7773:2;7777:6;7746:20;:38::i;:::-;7795:19;7817:9;:15;7827:4;7817:15;;;;;;;;;;;;;;;;7795:37;;7865:6;7850:11;:21;;7842:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7980:6;7966:11;:20;7948:9;:15;7958:4;7948:15;;;;;;;;;;;;;;;:38;;;;8023:6;8006:9;:13;8016:2;8006:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;8060:2;8045:26;;8054:4;8045:26;;;8064:6;8045:26;;;;;;:::i;:::-;;;;;;;;8082:37;8102:4;8108:2;8112:6;8082:19;:37::i;:::-;7583:543;7475:651;;;:::o;1018:167:2:-;1078:12;1100:11;1150:5;1138:18;1128:28;;1179:1;1170:6;:10;1163:17;;;1018:167;;;:::o;815:199::-;907:23;948:3;907:45;;958:8;:24;;;983:10;995:6;1003:5;958:51;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;901:113;815:199;;;:::o;8402:389:5:-;8504:1;8485:21;;:7;:21;;;;8477:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8553:49;8582:1;8586:7;8595:6;8553:20;:49::i;:::-;8629:6;8613:12;;:22;;;;;;;:::i;:::-;;;;;;;;8667:6;8645:9;:18;8655:7;8645:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;8709:7;8688:37;;8705:1;8688:37;;;8718:6;8688:37;;;;;;:::i;:::-;;;;;;;;8736:48;8764:1;8768:7;8777:6;8736:19;:48::i;:::-;8402:389;;:::o;11786:121::-;;;;:::o;12495:120::-;;;;:::o;7:410:9:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:112;;;280:79;;:::i;:::-;249:112;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;7:410;;;;;:::o;423:139::-;469:5;507:6;494:20;485:29;;523:33;550:5;523:33;:::i;:::-;423:139;;;;:::o;581:338::-;636:5;685:3;678:4;670:6;666:17;662:27;652:122;;693:79;;:::i;:::-;652:122;810:6;797:20;835:78;909:3;901:6;894:4;886:6;882:17;835:78;:::i;:::-;826:87;;642:277;581:338;;;;:::o;925:139::-;971:5;1009:6;996:20;987:29;;1025:33;1052:5;1025:33;:::i;:::-;925:139;;;;:::o;1070:329::-;1129:6;1178:2;1166:9;1157:7;1153:23;1149:32;1146:119;;;1184:79;;:::i;:::-;1146:119;1304:1;1329:53;1374:7;1365:6;1354:9;1350:22;1329:53;:::i;:::-;1319:63;;1275:117;1070:329;;;;:::o;1405:474::-;1473:6;1481;1530:2;1518:9;1509:7;1505:23;1501:32;1498:119;;;1536:79;;:::i;:::-;1498:119;1656:1;1681:53;1726:7;1717:6;1706:9;1702:22;1681:53;:::i;:::-;1671:63;;1627:117;1783:2;1809:53;1854:7;1845:6;1834:9;1830:22;1809:53;:::i;:::-;1799:63;;1754:118;1405:474;;;;;:::o;1885:619::-;1962:6;1970;1978;2027:2;2015:9;2006:7;2002:23;1998:32;1995:119;;;2033:79;;:::i;:::-;1995:119;2153:1;2178:53;2223:7;2214:6;2203:9;2199:22;2178:53;:::i;:::-;2168:63;;2124:117;2280:2;2306:53;2351:7;2342:6;2331:9;2327:22;2306:53;:::i;:::-;2296:63;;2251:118;2408:2;2434:53;2479:7;2470:6;2459:9;2455:22;2434:53;:::i;:::-;2424:63;;2379:118;1885:619;;;;;:::o;2510:474::-;2578:6;2586;2635:2;2623:9;2614:7;2610:23;2606:32;2603:119;;;2641:79;;:::i;:::-;2603:119;2761:1;2786:53;2831:7;2822:6;2811:9;2807:22;2786:53;:::i;:::-;2776:63;;2732:117;2888:2;2914:53;2959:7;2950:6;2939:9;2935:22;2914:53;:::i;:::-;2904:63;;2859:118;2510:474;;;;;:::o;2990:797::-;3076:6;3084;3092;3141:2;3129:9;3120:7;3116:23;3112:32;3109:119;;;3147:79;;:::i;:::-;3109:119;3267:1;3292:53;3337:7;3328:6;3317:9;3313:22;3292:53;:::i;:::-;3282:63;;3238:117;3394:2;3420:53;3465:7;3456:6;3445:9;3441:22;3420:53;:::i;:::-;3410:63;;3365:118;3550:2;3539:9;3535:18;3522:32;3581:18;3573:6;3570:30;3567:117;;;3603:79;;:::i;:::-;3567:117;3708:62;3762:7;3753:6;3742:9;3738:22;3708:62;:::i;:::-;3698:72;;3493:287;2990:797;;;;;:::o;3793:329::-;3852:6;3901:2;3889:9;3880:7;3876:23;3872:32;3869:119;;;3907:79;;:::i;:::-;3869:119;4027:1;4052:53;4097:7;4088:6;4077:9;4073:22;4052:53;:::i;:::-;4042:63;;3998:117;3793:329;;;;:::o;4128:118::-;4215:24;4233:5;4215:24;:::i;:::-;4210:3;4203:37;4128:118;;:::o;4252:109::-;4333:21;4348:5;4333:21;:::i;:::-;4328:3;4321:34;4252:109;;:::o;4367:360::-;4453:3;4481:38;4513:5;4481:38;:::i;:::-;4535:70;4598:6;4593:3;4535:70;:::i;:::-;4528:77;;4614:52;4659:6;4654:3;4647:4;4640:5;4636:16;4614:52;:::i;:::-;4691:29;4713:6;4691:29;:::i;:::-;4686:3;4682:39;4675:46;;4457:270;4367:360;;;;:::o;4733:364::-;4821:3;4849:39;4882:5;4849:39;:::i;:::-;4904:71;4968:6;4963:3;4904:71;:::i;:::-;4897:78;;4984:52;5029:6;5024:3;5017:4;5010:5;5006:16;4984:52;:::i;:::-;5061:29;5083:6;5061:29;:::i;:::-;5056:3;5052:39;5045:46;;4825:272;4733:364;;;;:::o;5103:366::-;5245:3;5266:67;5330:2;5325:3;5266:67;:::i;:::-;5259:74;;5342:93;5431:3;5342:93;:::i;:::-;5460:2;5455:3;5451:12;5444:19;;5103:366;;;:::o;5475:::-;5617:3;5638:67;5702:2;5697:3;5638:67;:::i;:::-;5631:74;;5714:93;5803:3;5714:93;:::i;:::-;5832:2;5827:3;5823:12;5816:19;;5475:366;;;:::o;5847:::-;5989:3;6010:67;6074:2;6069:3;6010:67;:::i;:::-;6003:74;;6086:93;6175:3;6086:93;:::i;:::-;6204:2;6199:3;6195:12;6188:19;;5847:366;;;:::o;6219:::-;6361:3;6382:67;6446:2;6441:3;6382:67;:::i;:::-;6375:74;;6458:93;6547:3;6458:93;:::i;:::-;6576:2;6571:3;6567:12;6560:19;;6219:366;;;:::o;6591:::-;6733:3;6754:67;6818:2;6813:3;6754:67;:::i;:::-;6747:74;;6830:93;6919:3;6830:93;:::i;:::-;6948:2;6943:3;6939:12;6932:19;;6591:366;;;:::o;6963:::-;7105:3;7126:67;7190:2;7185:3;7126:67;:::i;:::-;7119:74;;7202:93;7291:3;7202:93;:::i;:::-;7320:2;7315:3;7311:12;7304:19;;6963:366;;;:::o;7335:::-;7477:3;7498:67;7562:2;7557:3;7498:67;:::i;:::-;7491:74;;7574:93;7663:3;7574:93;:::i;:::-;7692:2;7687:3;7683:12;7676:19;;7335:366;;;:::o;7707:::-;7849:3;7870:67;7934:2;7929:3;7870:67;:::i;:::-;7863:74;;7946:93;8035:3;7946:93;:::i;:::-;8064:2;8059:3;8055:12;8048:19;;7707:366;;;:::o;8079:118::-;8166:24;8184:5;8166:24;:::i;:::-;8161:3;8154:37;8079:118;;:::o;8203:112::-;8286:22;8302:5;8286:22;:::i;:::-;8281:3;8274:35;8203:112;;:::o;8321:529::-;8488:4;8526:2;8515:9;8511:18;8503:26;;8539:71;8607:1;8596:9;8592:17;8583:6;8539:71;:::i;:::-;8620:72;8688:2;8677:9;8673:18;8664:6;8620:72;:::i;:::-;8739:9;8733:4;8729:20;8724:2;8713:9;8709:18;8702:48;8767:76;8838:4;8829:6;8767:76;:::i;:::-;8759:84;;8321:529;;;;;;:::o;8856:210::-;8943:4;8981:2;8970:9;8966:18;8958:26;;8994:65;9056:1;9045:9;9041:17;9032:6;8994:65;:::i;:::-;8856:210;;;;:::o;9072:313::-;9185:4;9223:2;9212:9;9208:18;9200:26;;9272:9;9266:4;9262:20;9258:1;9247:9;9243:17;9236:47;9300:78;9373:4;9364:6;9300:78;:::i;:::-;9292:86;;9072:313;;;;:::o;9391:419::-;9557:4;9595:2;9584:9;9580:18;9572:26;;9644:9;9638:4;9634:20;9630:1;9619:9;9615:17;9608:47;9672:131;9798:4;9672:131;:::i;:::-;9664:139;;9391:419;;;:::o;9816:::-;9982:4;10020:2;10009:9;10005:18;9997:26;;10069:9;10063:4;10059:20;10055:1;10044:9;10040:17;10033:47;10097:131;10223:4;10097:131;:::i;:::-;10089:139;;9816:419;;;:::o;10241:::-;10407:4;10445:2;10434:9;10430:18;10422:26;;10494:9;10488:4;10484:20;10480:1;10469:9;10465:17;10458:47;10522:131;10648:4;10522:131;:::i;:::-;10514:139;;10241:419;;;:::o;10666:::-;10832:4;10870:2;10859:9;10855:18;10847:26;;10919:9;10913:4;10909:20;10905:1;10894:9;10890:17;10883:47;10947:131;11073:4;10947:131;:::i;:::-;10939:139;;10666:419;;;:::o;11091:::-;11257:4;11295:2;11284:9;11280:18;11272:26;;11344:9;11338:4;11334:20;11330:1;11319:9;11315:17;11308:47;11372:131;11498:4;11372:131;:::i;:::-;11364:139;;11091:419;;;:::o;11516:::-;11682:4;11720:2;11709:9;11705:18;11697:26;;11769:9;11763:4;11759:20;11755:1;11744:9;11740:17;11733:47;11797:131;11923:4;11797:131;:::i;:::-;11789:139;;11516:419;;;:::o;11941:::-;12107:4;12145:2;12134:9;12130:18;12122:26;;12194:9;12188:4;12184:20;12180:1;12169:9;12165:17;12158:47;12222:131;12348:4;12222:131;:::i;:::-;12214:139;;11941:419;;;:::o;12366:::-;12532:4;12570:2;12559:9;12555:18;12547:26;;12619:9;12613:4;12609:20;12605:1;12594:9;12590:17;12583:47;12647:131;12773:4;12647:131;:::i;:::-;12639:139;;12366:419;;;:::o;12791:222::-;12884:4;12922:2;12911:9;12907:18;12899:26;;12935:71;13003:1;12992:9;12988:17;12979:6;12935:71;:::i;:::-;12791:222;;;;:::o;13019:419::-;13158:4;13196:2;13185:9;13181:18;13173:26;;13209:71;13277:1;13266:9;13262:17;13253:6;13209:71;:::i;:::-;13327:9;13321:4;13317:20;13312:2;13301:9;13297:18;13290:48;13355:76;13426:4;13417:6;13355:76;:::i;:::-;13347:84;;13019:419;;;;;:::o;13444:214::-;13533:4;13571:2;13560:9;13556:18;13548:26;;13584:67;13648:1;13637:9;13633:17;13624:6;13584:67;:::i;:::-;13444:214;;;;:::o;13664:129::-;13698:6;13725:20;;:::i;:::-;13715:30;;13754:33;13782:4;13774:6;13754:33;:::i;:::-;13664:129;;;:::o;13799:75::-;13832:6;13865:2;13859:9;13849:19;;13799:75;:::o;13880:307::-;13941:4;14031:18;14023:6;14020:30;14017:56;;;14053:18;;:::i;:::-;14017:56;14091:29;14113:6;14091:29;:::i;:::-;14083:37;;14175:4;14169;14165:15;14157:23;;13880:307;;;:::o;14193:98::-;14244:6;14278:5;14272:12;14262:22;;14193:98;;;:::o;14297:99::-;14349:6;14383:5;14377:12;14367:22;;14297:99;;;:::o;14402:168::-;14485:11;14519:6;14514:3;14507:19;14559:4;14554:3;14550:14;14535:29;;14402:168;;;;:::o;14576:169::-;14660:11;14694:6;14689:3;14682:19;14734:4;14729:3;14725:14;14710:29;;14576:169;;;;:::o;14751:305::-;14791:3;14810:20;14828:1;14810:20;:::i;:::-;14805:25;;14844:20;14862:1;14844:20;:::i;:::-;14839:25;;14998:1;14930:66;14926:74;14923:1;14920:81;14917:107;;;15004:18;;:::i;:::-;14917:107;15048:1;15045;15041:9;15034:16;;14751:305;;;;:::o;15062:96::-;15099:7;15128:24;15146:5;15128:24;:::i;:::-;15117:35;;15062:96;;;:::o;15164:90::-;15198:7;15241:5;15234:13;15227:21;15216:32;;15164:90;;;:::o;15260:126::-;15297:7;15337:42;15330:5;15326:54;15315:65;;15260:126;;;:::o;15392:77::-;15429:7;15458:5;15447:16;;15392:77;;;:::o;15475:86::-;15510:7;15550:4;15543:5;15539:16;15528:27;;15475:86;;;:::o;15567:154::-;15651:6;15646:3;15641;15628:30;15713:1;15704:6;15699:3;15695:16;15688:27;15567:154;;;:::o;15727:307::-;15795:1;15805:113;15819:6;15816:1;15813:13;15805:113;;;15904:1;15899:3;15895:11;15889:18;15885:1;15880:3;15876:11;15869:39;15841:2;15838:1;15834:10;15829:15;;15805:113;;;15936:6;15933:1;15930:13;15927:101;;;16016:1;16007:6;16002:3;15998:16;15991:27;15927:101;15776:258;15727:307;;;:::o;16040:320::-;16084:6;16121:1;16115:4;16111:12;16101:22;;16168:1;16162:4;16158:12;16189:18;16179:81;;16245:4;16237:6;16233:17;16223:27;;16179:81;16307:2;16299:6;16296:14;16276:18;16273:38;16270:84;;;16326:18;;:::i;:::-;16270:84;16091:269;16040:320;;;:::o;16366:281::-;16449:27;16471:4;16449:27;:::i;:::-;16441:6;16437:40;16579:6;16567:10;16564:22;16543:18;16531:10;16528:34;16525:62;16522:88;;;16590:18;;:::i;:::-;16522:88;16630:10;16626:2;16619:22;16409:238;16366:281;;:::o;16653:180::-;16701:77;16698:1;16691:88;16798:4;16795:1;16788:15;16822:4;16819:1;16812:15;16839:180;16887:77;16884:1;16877:88;16984:4;16981:1;16974:15;17008:4;17005:1;16998:15;17025:180;17073:77;17070:1;17063:88;17170:4;17167:1;17160:15;17194:4;17191:1;17184:15;17211:117;17320:1;17317;17310:12;17334:117;17443:1;17440;17433:12;17457:117;17566:1;17563;17556:12;17580:117;17689:1;17686;17679:12;17703:102;17744:6;17795:2;17791:7;17786:2;17779:5;17775:14;17771:28;17761:38;;17703:102;;;:::o;17811:222::-;17951:34;17947:1;17939:6;17935:14;17928:58;18020:5;18015:2;18007:6;18003:15;17996:30;17811:222;:::o;18039:221::-;18179:34;18175:1;18167:6;18163:14;18156:58;18248:4;18243:2;18235:6;18231:15;18224:29;18039:221;:::o;18266:179::-;18406:31;18402:1;18394:6;18390:14;18383:55;18266:179;:::o;18451:225::-;18591:34;18587:1;18579:6;18575:14;18568:58;18660:8;18655:2;18647:6;18643:15;18636:33;18451:225;:::o;18682:224::-;18822:34;18818:1;18810:6;18806:14;18799:58;18891:7;18886:2;18878:6;18874:15;18867:32;18682:224;:::o;18912:223::-;19052:34;19048:1;19040:6;19036:14;19029:58;19121:6;19116:2;19108:6;19104:15;19097:31;18912:223;:::o;19141:224::-;19281:34;19277:1;19269:6;19265:14;19258:58;19350:7;19345:2;19337:6;19333:15;19326:32;19141:224;:::o;19371:181::-;19511:33;19507:1;19499:6;19495:14;19488:57;19371:181;:::o;19558:122::-;19631:24;19649:5;19631:24;:::i;:::-;19624:5;19621:35;19611:63;;19670:1;19667;19660:12;19611:63;19558:122;:::o;19686:::-;19759:24;19777:5;19759:24;:::i;:::-;19752:5;19749:35;19739:63;;19798:1;19795;19788:12;19739:63;19686:122;:::o",
  "source": "pragma solidity 0.8.7;\n\nimport \"./ERC677/ERC677Token.sol\";\n\ncontract ERC677Reentrancy is ERC677Token {\n\tmapping(address => uint256) public lock_times;\n\tconstructor() public payable ERC677Token(\"ERC667Reentrancy\",\"E667R\") {\n\t\t_mint(msg.sender,msg.value);\n\t}\n\tfunction deposit() public payable {\n\t\t_mint(msg.sender,msg.value);\n\t}\n\tfunction vuln(uint256 amount) public {\n\t\trequire(amount >= balanceOf(msg.sender));\n\t\tif (lock_times[msg.sender] == 0 || lock_times[msg.sender] < block.timestamp) {\n\t\t\ttransferAndCall(msg.sender,amount,\"\");\n\t\t\tlock_times[msg.sender] = block.timestamp + 7 days;\n\t\t}\n\t}\n}\n",
  "sourcePath": "/home/neo/blockfuck/git/all_reentrancy_in_one_repo/erc677_reentrancy/contracts/vuln_contract.sol",
  "ast": {
    "absolutePath": "/home/neo/blockfuck/git/all_reentrancy_in_one_repo/erc677_reentrancy/contracts/vuln_contract.sol",
    "exportedSymbols": {
      "Context": [
        1032
      ],
      "ERC20": [
        907
      ],
      "ERC677": [
        39
      ],
      "ERC677Receiver": [
        51
      ],
      "ERC677Reentrancy": [
        321
      ],
      "ERC677Token": [
        154
      ],
      "IERC20": [
        985
      ],
      "IERC20Metadata": [
        1010
      ]
    },
    "id": 322,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 239,
        "literals": [
          "solidity",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:4"
      },
      {
        "absolutePath": "/home/neo/blockfuck/git/all_reentrancy_in_one_repo/erc677_reentrancy/contracts/ERC677/ERC677Token.sol",
        "file": "./ERC677/ERC677Token.sol",
        "id": 240,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 322,
        "sourceUnit": 155,
        "src": "24:34:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 241,
              "name": "ERC677Token",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 154,
              "src": "89:11:4"
            },
            "id": 242,
            "nodeType": "InheritanceSpecifier",
            "src": "89:11:4"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 321,
        "linearizedBaseContracts": [
          321,
          154,
          39,
          907,
          1010,
          985,
          1032
        ],
        "name": "ERC677Reentrancy",
        "nameLocation": "69:16:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "91cbc478",
            "id": 246,
            "mutability": "mutable",
            "name": "lock_times",
            "nameLocation": "139:10:4",
            "nodeType": "VariableDeclaration",
            "scope": 321,
            "src": "104:45:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 245,
              "keyType": {
                "id": 243,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "112:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "104:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 244,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "123:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 260,
              "nodeType": "Block",
              "src": "221:35:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 254,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "231:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "231:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 256,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "242:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "242:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 253,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 724,
                      "src": "225:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "225:27:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 259,
                  "nodeType": "ExpressionStatement",
                  "src": "225:27:4"
                }
              ]
            },
            "id": 261,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4552433636375265656e7472616e6379",
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "193:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_1ac3034d9601ba87593b5f8541dae0ed3e1c5f2a7cb4df14d3d14758dc06f663",
                      "typeString": "literal_string \"ERC667Reentrancy\""
                    },
                    "value": "ERC667Reentrancy"
                  },
                  {
                    "hexValue": "4536363752",
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "212:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_5e68dce755302833b142e2f021619f6dc06f1cd102f38fd5e9a0d384302dca61",
                      "typeString": "literal_string \"E667R\""
                    },
                    "value": "E667R"
                  }
                ],
                "id": 251,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 248,
                  "name": "ERC677Token",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 154,
                  "src": "181:11:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "181:39:4"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "163:2:4"
            },
            "returnParameters": {
              "id": 252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "221:0:4"
            },
            "scope": 321,
            "src": "152:104:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 271,
              "nodeType": "Block",
              "src": "292:35:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 265,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "302:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "302:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 267,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "313:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "313:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 264,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 724,
                      "src": "296:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "296:27:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 270,
                  "nodeType": "ExpressionStatement",
                  "src": "296:27:4"
                }
              ]
            },
            "functionSelector": "d0e30db0",
            "id": 272,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "267:7:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 262,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "274:2:4"
            },
            "returnParameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "292:0:4"
            },
            "scope": 321,
            "src": "258:69:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 319,
              "nodeType": "Block",
              "src": "366:229:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 278,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 274,
                          "src": "378:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 280,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "398:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 281,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "398:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 279,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 420,
                            "src": "388:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "388:21:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "378:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 277,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "370:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "370:40:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 285,
                  "nodeType": "ExpressionStatement",
                  "src": "370:40:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 286,
                          "name": "lock_times",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 246,
                          "src": "418:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 289,
                        "indexExpression": {
                          "expression": {
                            "id": 287,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "429:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "429:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "418:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "444:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "418:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 292,
                          "name": "lock_times",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 246,
                          "src": "449:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 295,
                        "indexExpression": {
                          "expression": {
                            "id": 293,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "460:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "460:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "449:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "expression": {
                          "id": 296,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "474:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "474:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "449:40:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "418:71:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 318,
                  "nodeType": "IfStatement",
                  "src": "414:178:4",
                  "trueBody": {
                    "id": 317,
                    "nodeType": "Block",
                    "src": "491:101:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 301,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "512:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 302,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "512:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 303,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 274,
                              "src": "523:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "",
                              "id": 304,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "530:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "id": 300,
                            "name": "transferAndCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              111
                            ],
                            "referencedDeclaration": 111,
                            "src": "496:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (address,uint256,bytes memory) returns (bool)"
                            }
                          },
                          "id": 305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "496:37:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 306,
                        "nodeType": "ExpressionStatement",
                        "src": "496:37:4"
                      },
                      {
                        "expression": {
                          "id": 315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 307,
                              "name": "lock_times",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 246,
                              "src": "538:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 310,
                            "indexExpression": {
                              "expression": {
                                "id": 308,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "549:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 309,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "549:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "538:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 314,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 311,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967292,
                                "src": "563:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 312,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "563:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "37",
                              "id": 313,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "581:6:4",
                              "subdenomination": "days",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_604800_by_1",
                                "typeString": "int_const 604800"
                              },
                              "value": "7"
                            },
                            "src": "563:24:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "538:49:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 316,
                        "nodeType": "ExpressionStatement",
                        "src": "538:49:4"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "e3bb15f0",
            "id": 320,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vuln",
            "nameLocation": "338:4:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 274,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "351:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 320,
                  "src": "343:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 273,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "343:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "342:16:4"
            },
            "returnParameters": {
              "id": 276,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "366:0:4"
            },
            "scope": 321,
            "src": "329:266:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 322,
        "src": "60:537:4",
        "usedErrors": []
      }
    ],
    "src": "0:598:4"
  },
  "legacyAST": {
    "absolutePath": "/home/neo/blockfuck/git/all_reentrancy_in_one_repo/erc677_reentrancy/contracts/vuln_contract.sol",
    "exportedSymbols": {
      "Context": [
        1032
      ],
      "ERC20": [
        907
      ],
      "ERC677": [
        39
      ],
      "ERC677Receiver": [
        51
      ],
      "ERC677Reentrancy": [
        321
      ],
      "ERC677Token": [
        154
      ],
      "IERC20": [
        985
      ],
      "IERC20Metadata": [
        1010
      ]
    },
    "id": 322,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 239,
        "literals": [
          "solidity",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:4"
      },
      {
        "absolutePath": "/home/neo/blockfuck/git/all_reentrancy_in_one_repo/erc677_reentrancy/contracts/ERC677/ERC677Token.sol",
        "file": "./ERC677/ERC677Token.sol",
        "id": 240,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 322,
        "sourceUnit": 155,
        "src": "24:34:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 241,
              "name": "ERC677Token",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 154,
              "src": "89:11:4"
            },
            "id": 242,
            "nodeType": "InheritanceSpecifier",
            "src": "89:11:4"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 321,
        "linearizedBaseContracts": [
          321,
          154,
          39,
          907,
          1010,
          985,
          1032
        ],
        "name": "ERC677Reentrancy",
        "nameLocation": "69:16:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "91cbc478",
            "id": 246,
            "mutability": "mutable",
            "name": "lock_times",
            "nameLocation": "139:10:4",
            "nodeType": "VariableDeclaration",
            "scope": 321,
            "src": "104:45:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 245,
              "keyType": {
                "id": 243,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "112:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "104:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 244,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "123:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 260,
              "nodeType": "Block",
              "src": "221:35:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 254,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "231:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "231:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 256,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "242:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "242:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 253,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 724,
                      "src": "225:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "225:27:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 259,
                  "nodeType": "ExpressionStatement",
                  "src": "225:27:4"
                }
              ]
            },
            "id": 261,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4552433636375265656e7472616e6379",
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "193:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_1ac3034d9601ba87593b5f8541dae0ed3e1c5f2a7cb4df14d3d14758dc06f663",
                      "typeString": "literal_string \"ERC667Reentrancy\""
                    },
                    "value": "ERC667Reentrancy"
                  },
                  {
                    "hexValue": "4536363752",
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "212:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_5e68dce755302833b142e2f021619f6dc06f1cd102f38fd5e9a0d384302dca61",
                      "typeString": "literal_string \"E667R\""
                    },
                    "value": "E667R"
                  }
                ],
                "id": 251,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 248,
                  "name": "ERC677Token",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 154,
                  "src": "181:11:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "181:39:4"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "163:2:4"
            },
            "returnParameters": {
              "id": 252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "221:0:4"
            },
            "scope": 321,
            "src": "152:104:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 271,
              "nodeType": "Block",
              "src": "292:35:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 265,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "302:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "302:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 267,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "313:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "313:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 264,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 724,
                      "src": "296:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "296:27:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 270,
                  "nodeType": "ExpressionStatement",
                  "src": "296:27:4"
                }
              ]
            },
            "functionSelector": "d0e30db0",
            "id": 272,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "267:7:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 262,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "274:2:4"
            },
            "returnParameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "292:0:4"
            },
            "scope": 321,
            "src": "258:69:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 319,
              "nodeType": "Block",
              "src": "366:229:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 278,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 274,
                          "src": "378:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 280,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "398:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 281,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "398:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 279,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 420,
                            "src": "388:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "388:21:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "378:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 277,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "370:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "370:40:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 285,
                  "nodeType": "ExpressionStatement",
                  "src": "370:40:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 286,
                          "name": "lock_times",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 246,
                          "src": "418:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 289,
                        "indexExpression": {
                          "expression": {
                            "id": 287,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "429:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "429:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "418:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "444:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "418:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 292,
                          "name": "lock_times",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 246,
                          "src": "449:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 295,
                        "indexExpression": {
                          "expression": {
                            "id": 293,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "460:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "460:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "449:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "expression": {
                          "id": 296,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "474:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "474:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "449:40:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "418:71:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 318,
                  "nodeType": "IfStatement",
                  "src": "414:178:4",
                  "trueBody": {
                    "id": 317,
                    "nodeType": "Block",
                    "src": "491:101:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 301,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "512:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 302,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "512:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 303,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 274,
                              "src": "523:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "",
                              "id": 304,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "530:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "id": 300,
                            "name": "transferAndCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              111
                            ],
                            "referencedDeclaration": 111,
                            "src": "496:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (address,uint256,bytes memory) returns (bool)"
                            }
                          },
                          "id": 305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "496:37:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 306,
                        "nodeType": "ExpressionStatement",
                        "src": "496:37:4"
                      },
                      {
                        "expression": {
                          "id": 315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 307,
                              "name": "lock_times",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 246,
                              "src": "538:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 310,
                            "indexExpression": {
                              "expression": {
                                "id": 308,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "549:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 309,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "549:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "538:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 314,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 311,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967292,
                                "src": "563:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 312,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "563:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "37",
                              "id": 313,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "581:6:4",
                              "subdenomination": "days",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_604800_by_1",
                                "typeString": "int_const 604800"
                              },
                              "value": "7"
                            },
                            "src": "563:24:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "538:49:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 316,
                        "nodeType": "ExpressionStatement",
                        "src": "538:49:4"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "e3bb15f0",
            "id": 320,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vuln",
            "nameLocation": "338:4:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 274,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "351:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 320,
                  "src": "343:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 273,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "343:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "342:16:4"
            },
            "returnParameters": {
              "id": 276,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "366:0:4"
            },
            "scope": 321,
            "src": "329:266:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 322,
        "src": "60:537:4",
        "usedErrors": []
      }
    ],
    "src": "0:598:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {
    "1667557298571": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x6A1e34c9105bB36e3E817566d753A639f4d40FD2",
      "transactionHash": "0xa87095ea147d1a90e36d7c24b13d5ad58a87045f1c96f0afd762b80d6f174006"
    },
    "1667565340220": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x887b76fd3658d28fDe79B335E2749c6138303920",
      "transactionHash": "0x79f0b2642731f7a1d460cd974f36fbfb9ad74e628c823ed93cb8871dd21ab8b9"
    },
    "1667812585723": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x893529Bf9A0Fc752B3128283cbA42Cd6f3abF923",
      "transactionHash": "0x23d808cbf61eed2b138dcb9e9f35dedee003fac73b86f460d0ee00bcf1ddddbe"
    }
  },
  "schemaVersion": "3.2.2-next.0",
  "updatedAt": "2022-11-07T09:17:32.862Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferAndCall(address,uint256,bytes)": {
        "details": "transfer token to a contract address with additional data if the recipient is a contact.",
        "params": {
          "_data": "The extra data to be passed to the receiving contract.",
          "_to": "The address to transfer to.",
          "_value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}