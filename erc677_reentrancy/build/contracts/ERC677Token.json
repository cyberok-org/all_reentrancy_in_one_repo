{
  "contractName": "ERC677Token",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "transferAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"transfer token to a contract address with additional data if the recipient is a contact.\",\"params\":{\"_data\":\"The extra data to be passed to the receiving contract.\",\"_to\":\"The address to transfer to.\",\"_value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/neo/blockfuck/git/all_reentrancy_in_one_repo/erc677_reentrancy/contracts/ERC677/ERC677Token.sol\":\"ERC677Token\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/neo/blockfuck/git/all_reentrancy_in_one_repo/erc677_reentrancy/contracts/ERC677/ERC677.sol\":{\"keccak256\":\"0xaab41d42f38a0b2c632112761ac3bfcf03d055db874923e970b0368a1819c013\",\"urls\":[\"bzz-raw://6ad99ab7fa580a6d0bee7c3849082a408063d4e091fd06427845719ec52190fb\",\"dweb:/ipfs/QmUAXRtKHVVDyjbXPGH5j16MF6AzxMhmZrutFhWESnpTKs\"]},\"/home/neo/blockfuck/git/all_reentrancy_in_one_repo/erc677_reentrancy/contracts/ERC677/ERC677Receiver.sol\":{\"keccak256\":\"0xf935f01007791f2e020b00cc6649125cd3d187617e073821ba7d982fdb314df1\",\"urls\":[\"bzz-raw://5432a485fd351d508b71b07f75c04a7114bf57fd75c45dfa843b025d1054e09d\",\"dweb:/ipfs/QmeiohSk7MterCBTyJ5vqUjWrMh1iQNVBZjtPG3rBCJDVb\"]},\"/home/neo/blockfuck/git/all_reentrancy_in_one_repo/erc677_reentrancy/contracts/ERC677/ERC677Token.sol\":{\"keccak256\":\"0xdcd62c093ed32670dfe8a26f1c3de8f9fa279992c014407cb8c0d59b3f684389\",\"urls\":[\"bzz-raw://6c1f1237a0577fa3aa64798690dd21a95323dbe1d77b995bf4833c4e7e0199ed\",\"dweb:/ipfs/QmbVzc6ZR1wrCLaHgYkFiEqZse6vUCo42jB6rnWtkKo2UN\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001a0e38038062001a0e8339818101604052810190620000379190620001a7565b8181818181600390805190602001906200005392919062000079565b5080600490805190602001906200006c92919062000079565b50505050505050620003b0565b8280546200008790620002c1565b90600052602060002090601f016020900481019282620000ab5760008555620000f7565b82601f10620000c657805160ff1916838001178555620000f7565b82800160010185558215620000f7579182015b82811115620000f6578251825591602001919060010190620000d9565b5b5090506200010691906200010a565b5090565b5b80821115620001255760008160009055506001016200010b565b5090565b6000620001406200013a8462000255565b6200022c565b9050828152602081018484840111156200015f576200015e62000390565b5b6200016c8482856200028b565b509392505050565b600082601f8301126200018c576200018b6200038b565b5b81516200019e84826020860162000129565b91505092915050565b60008060408385031215620001c157620001c06200039a565b5b600083015167ffffffffffffffff811115620001e257620001e162000395565b5b620001f08582860162000174565b925050602083015167ffffffffffffffff81111562000214576200021362000395565b5b620002228582860162000174565b9150509250929050565b6000620002386200024b565b9050620002468282620002f7565b919050565b6000604051905090565b600067ffffffffffffffff8211156200027357620002726200035c565b5b6200027e826200039f565b9050602081019050919050565b60005b83811015620002ab5780820151818401526020810190506200028e565b83811115620002bb576000848401525b50505050565b60006002820490506001821680620002da57607f821691505b60208210811415620002f157620002f06200032d565b5b50919050565b62000302826200039f565b810181811067ffffffffffffffff821117156200032457620003236200035c565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61164e80620003c06000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80634000aea0116100715780634000aea0146101a357806370a08231146101d357806395d89b4114610203578063a457c2d714610221578063a9059cbb14610251578063dd62ed3e14610281576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633950935114610173575b600080fd5b6100c16102b1565b6040516100ce9190610fef565b60405180910390f35b6100f160048036038101906100ec9190610d44565b610343565b6040516100fe9190610fd4565b60405180910390f35b61010f610366565b60405161011c91906110f1565b60405180910390f35b61013f600480360381019061013a9190610cf1565b610370565b60405161014c9190610fd4565b60405180910390f35b61015d61039f565b60405161016a919061113c565b60405180910390f35b61018d60048036038101906101889190610d44565b6103a8565b60405161019a9190610fd4565b60405180910390f35b6101bd60048036038101906101b89190610d84565b6103df565b6040516101ca9190610fd4565b60405180910390f35b6101ed60048036038101906101e89190610c84565b610478565b6040516101fa91906110f1565b60405180910390f35b61020b6104c0565b6040516102189190610fef565b60405180910390f35b61023b60048036038101906102369190610d44565b610552565b6040516102489190610fd4565b60405180910390f35b61026b60048036038101906102669190610d44565b6105c9565b6040516102789190610fd4565b60405180910390f35b61029b60048036038101906102969190610cb1565b6105ec565b6040516102a891906110f1565b60405180910390f35b6060600380546102c0906112d2565b80601f01602080910402602001604051908101604052809291908181526020018280546102ec906112d2565b80156103395780601f1061030e57610100808354040283529160200191610339565b820191906000526020600020905b81548152906001019060200180831161031c57829003601f168201915b5050505050905090565b60008061034e610673565b905061035b81858561067b565b600191505092915050565b6000600254905090565b60008061037b610673565b9050610388858285610846565b6103938585856108d2565b60019150509392505050565b60006012905090565b6000806103b3610673565b90506103d48185856103c585896105ec565b6103cf91906111e5565b61067b565b600191505092915050565b60006103eb84846105c9565b508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16858560405161044b92919061110c565b60405180910390a361045c84610b53565b1561046d5761046c848484610b66565b5b600190509392505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546104cf906112d2565b80601f01602080910402602001604051908101604052809291908181526020018280546104fb906112d2565b80156105485780601f1061051d57610100808354040283529160200191610548565b820191906000526020600020905b81548152906001019060200180831161052b57829003601f168201915b5050505050905090565b60008061055d610673565b9050600061056b82866105ec565b9050838110156105b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a7906110d1565b60405180910390fd5b6105bd828686840361067b565b60019250505092915050565b6000806105d4610673565b90506105e18185856108d2565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156106eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e2906110b1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561075b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075290611031565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161083991906110f1565b60405180910390a3505050565b600061085284846105ec565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108cc57818110156108be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b590611051565b60405180910390fd5b6108cb848484840361067b565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610942576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093990611091565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a990611011565b60405180910390fd5b6109bd838383610be0565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3a90611071565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ad691906111e5565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b3a91906110f1565b60405180910390a3610b4d848484610be5565b50505050565b600080823b905060008111915050919050565b60008390508073ffffffffffffffffffffffffffffffffffffffff1663a4c0ed363385856040518463ffffffff1660e01b8152600401610ba893929190610f96565b600060405180830381600087803b158015610bc257600080fd5b505af1158015610bd6573d6000803e3d6000fd5b5050505050505050565b505050565b505050565b6000610bfd610bf88461117c565b611157565b905082815260208101848484011115610c1957610c186113c7565b5b610c24848285611290565b509392505050565b600081359050610c3b816115ea565b92915050565b600082601f830112610c5657610c556113c2565b5b8135610c66848260208601610bea565b91505092915050565b600081359050610c7e81611601565b92915050565b600060208284031215610c9a57610c996113d1565b5b6000610ca884828501610c2c565b91505092915050565b60008060408385031215610cc857610cc76113d1565b5b6000610cd685828601610c2c565b9250506020610ce785828601610c2c565b9150509250929050565b600080600060608486031215610d0a57610d096113d1565b5b6000610d1886828701610c2c565b9350506020610d2986828701610c2c565b9250506040610d3a86828701610c6f565b9150509250925092565b60008060408385031215610d5b57610d5a6113d1565b5b6000610d6985828601610c2c565b9250506020610d7a85828601610c6f565b9150509250929050565b600080600060608486031215610d9d57610d9c6113d1565b5b6000610dab86828701610c2c565b9350506020610dbc86828701610c6f565b925050604084013567ffffffffffffffff811115610ddd57610ddc6113cc565b5b610de986828701610c41565b9150509250925092565b610dfc8161123b565b82525050565b610e0b8161124d565b82525050565b6000610e1c826111ad565b610e2681856111c3565b9350610e3681856020860161129f565b610e3f816113d6565b840191505092915050565b6000610e55826111b8565b610e5f81856111d4565b9350610e6f81856020860161129f565b610e78816113d6565b840191505092915050565b6000610e906023836111d4565b9150610e9b826113e7565b604082019050919050565b6000610eb36022836111d4565b9150610ebe82611436565b604082019050919050565b6000610ed6601d836111d4565b9150610ee182611485565b602082019050919050565b6000610ef96026836111d4565b9150610f04826114ae565b604082019050919050565b6000610f1c6025836111d4565b9150610f27826114fd565b604082019050919050565b6000610f3f6024836111d4565b9150610f4a8261154c565b604082019050919050565b6000610f626025836111d4565b9150610f6d8261159b565b604082019050919050565b610f8181611279565b82525050565b610f9081611283565b82525050565b6000606082019050610fab6000830186610df3565b610fb86020830185610f78565b8181036040830152610fca8184610e11565b9050949350505050565b6000602082019050610fe96000830184610e02565b92915050565b600060208201905081810360008301526110098184610e4a565b905092915050565b6000602082019050818103600083015261102a81610e83565b9050919050565b6000602082019050818103600083015261104a81610ea6565b9050919050565b6000602082019050818103600083015261106a81610ec9565b9050919050565b6000602082019050818103600083015261108a81610eec565b9050919050565b600060208201905081810360008301526110aa81610f0f565b9050919050565b600060208201905081810360008301526110ca81610f32565b9050919050565b600060208201905081810360008301526110ea81610f55565b9050919050565b60006020820190506111066000830184610f78565b92915050565b60006040820190506111216000830185610f78565b81810360208301526111338184610e11565b90509392505050565b60006020820190506111516000830184610f87565b92915050565b6000611161611172565b905061116d8282611304565b919050565b6000604051905090565b600067ffffffffffffffff82111561119757611196611393565b5b6111a0826113d6565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006111f082611279565b91506111fb83611279565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156112305761122f611335565b5b828201905092915050565b600061124682611259565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b838110156112bd5780820151818401526020810190506112a2565b838111156112cc576000848401525b50505050565b600060028204905060018216806112ea57607f821691505b602082108114156112fe576112fd611364565b5b50919050565b61130d826113d6565b810181811067ffffffffffffffff8211171561132c5761132b611393565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6115f38161123b565b81146115fe57600080fd5b50565b61160a81611279565b811461161557600080fd5b5056fea26469706673582212202bba0d5795951120d6d75090f5aefb51b5f826b8af09277db855fc6fd6d2b43d64736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c80634000aea0116100715780634000aea0146101a357806370a08231146101d357806395d89b4114610203578063a457c2d714610221578063a9059cbb14610251578063dd62ed3e14610281576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633950935114610173575b600080fd5b6100c16102b1565b6040516100ce9190610fef565b60405180910390f35b6100f160048036038101906100ec9190610d44565b610343565b6040516100fe9190610fd4565b60405180910390f35b61010f610366565b60405161011c91906110f1565b60405180910390f35b61013f600480360381019061013a9190610cf1565b610370565b60405161014c9190610fd4565b60405180910390f35b61015d61039f565b60405161016a919061113c565b60405180910390f35b61018d60048036038101906101889190610d44565b6103a8565b60405161019a9190610fd4565b60405180910390f35b6101bd60048036038101906101b89190610d84565b6103df565b6040516101ca9190610fd4565b60405180910390f35b6101ed60048036038101906101e89190610c84565b610478565b6040516101fa91906110f1565b60405180910390f35b61020b6104c0565b6040516102189190610fef565b60405180910390f35b61023b60048036038101906102369190610d44565b610552565b6040516102489190610fd4565b60405180910390f35b61026b60048036038101906102669190610d44565b6105c9565b6040516102789190610fd4565b60405180910390f35b61029b60048036038101906102969190610cb1565b6105ec565b6040516102a891906110f1565b60405180910390f35b6060600380546102c0906112d2565b80601f01602080910402602001604051908101604052809291908181526020018280546102ec906112d2565b80156103395780601f1061030e57610100808354040283529160200191610339565b820191906000526020600020905b81548152906001019060200180831161031c57829003601f168201915b5050505050905090565b60008061034e610673565b905061035b81858561067b565b600191505092915050565b6000600254905090565b60008061037b610673565b9050610388858285610846565b6103938585856108d2565b60019150509392505050565b60006012905090565b6000806103b3610673565b90506103d48185856103c585896105ec565b6103cf91906111e5565b61067b565b600191505092915050565b60006103eb84846105c9565b508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16858560405161044b92919061110c565b60405180910390a361045c84610b53565b1561046d5761046c848484610b66565b5b600190509392505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546104cf906112d2565b80601f01602080910402602001604051908101604052809291908181526020018280546104fb906112d2565b80156105485780601f1061051d57610100808354040283529160200191610548565b820191906000526020600020905b81548152906001019060200180831161052b57829003601f168201915b5050505050905090565b60008061055d610673565b9050600061056b82866105ec565b9050838110156105b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a7906110d1565b60405180910390fd5b6105bd828686840361067b565b60019250505092915050565b6000806105d4610673565b90506105e18185856108d2565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156106eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e2906110b1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561075b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075290611031565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161083991906110f1565b60405180910390a3505050565b600061085284846105ec565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108cc57818110156108be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b590611051565b60405180910390fd5b6108cb848484840361067b565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610942576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093990611091565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a990611011565b60405180910390fd5b6109bd838383610be0565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3a90611071565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ad691906111e5565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b3a91906110f1565b60405180910390a3610b4d848484610be5565b50505050565b600080823b905060008111915050919050565b60008390508073ffffffffffffffffffffffffffffffffffffffff1663a4c0ed363385856040518463ffffffff1660e01b8152600401610ba893929190610f96565b600060405180830381600087803b158015610bc257600080fd5b505af1158015610bd6573d6000803e3d6000fd5b5050505050505050565b505050565b505050565b6000610bfd610bf88461117c565b611157565b905082815260208101848484011115610c1957610c186113c7565b5b610c24848285611290565b509392505050565b600081359050610c3b816115ea565b92915050565b600082601f830112610c5657610c556113c2565b5b8135610c66848260208601610bea565b91505092915050565b600081359050610c7e81611601565b92915050565b600060208284031215610c9a57610c996113d1565b5b6000610ca884828501610c2c565b91505092915050565b60008060408385031215610cc857610cc76113d1565b5b6000610cd685828601610c2c565b9250506020610ce785828601610c2c565b9150509250929050565b600080600060608486031215610d0a57610d096113d1565b5b6000610d1886828701610c2c565b9350506020610d2986828701610c2c565b9250506040610d3a86828701610c6f565b9150509250925092565b60008060408385031215610d5b57610d5a6113d1565b5b6000610d6985828601610c2c565b9250506020610d7a85828601610c6f565b9150509250929050565b600080600060608486031215610d9d57610d9c6113d1565b5b6000610dab86828701610c2c565b9350506020610dbc86828701610c6f565b925050604084013567ffffffffffffffff811115610ddd57610ddc6113cc565b5b610de986828701610c41565b9150509250925092565b610dfc8161123b565b82525050565b610e0b8161124d565b82525050565b6000610e1c826111ad565b610e2681856111c3565b9350610e3681856020860161129f565b610e3f816113d6565b840191505092915050565b6000610e55826111b8565b610e5f81856111d4565b9350610e6f81856020860161129f565b610e78816113d6565b840191505092915050565b6000610e906023836111d4565b9150610e9b826113e7565b604082019050919050565b6000610eb36022836111d4565b9150610ebe82611436565b604082019050919050565b6000610ed6601d836111d4565b9150610ee182611485565b602082019050919050565b6000610ef96026836111d4565b9150610f04826114ae565b604082019050919050565b6000610f1c6025836111d4565b9150610f27826114fd565b604082019050919050565b6000610f3f6024836111d4565b9150610f4a8261154c565b604082019050919050565b6000610f626025836111d4565b9150610f6d8261159b565b604082019050919050565b610f8181611279565b82525050565b610f9081611283565b82525050565b6000606082019050610fab6000830186610df3565b610fb86020830185610f78565b8181036040830152610fca8184610e11565b9050949350505050565b6000602082019050610fe96000830184610e02565b92915050565b600060208201905081810360008301526110098184610e4a565b905092915050565b6000602082019050818103600083015261102a81610e83565b9050919050565b6000602082019050818103600083015261104a81610ea6565b9050919050565b6000602082019050818103600083015261106a81610ec9565b9050919050565b6000602082019050818103600083015261108a81610eec565b9050919050565b600060208201905081810360008301526110aa81610f0f565b9050919050565b600060208201905081810360008301526110ca81610f32565b9050919050565b600060208201905081810360008301526110ea81610f55565b9050919050565b60006020820190506111066000830184610f78565b92915050565b60006040820190506111216000830185610f78565b81810360208301526111338184610e11565b90509392505050565b60006020820190506111516000830184610f87565b92915050565b6000611161611172565b905061116d8282611304565b919050565b6000604051905090565b600067ffffffffffffffff82111561119757611196611393565b5b6111a0826113d6565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006111f082611279565b91506111fb83611279565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156112305761122f611335565b5b828201905092915050565b600061124682611259565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b838110156112bd5780820151818401526020810190506112a2565b838111156112cc576000848401525b50505050565b600060028204905060018216806112ea57607f821691505b602082108114156112fe576112fd611364565b5b50919050565b61130d826113d6565b810181811067ffffffffffffffff8211171561132c5761132b611393565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6115f38161123b565b81146115fe57600080fd5b50565b61160a81611279565b811461161557600080fd5b5056fea26469706673582212202bba0d5795951120d6d75090f5aefb51b5f826b8af09277db855fc6fd6d2b43d64736f6c63430008070033",
  "immutableReferences": {},
  "sourceMap": "82:1106:2:-:0;;;119:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;188:5;194:7;178:5:0;184:7;2052:5:5;2044;:13;;;;;;;;;;;;:::i;:::-;;2077:7;2067;:17;;;;;;;;;;;;:::i;:::-;;1978:113;;110:85:0;;119:86:2;;82:1106;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:421:9:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:112;;;293:79;;:::i;:::-;262:112;383:39;415:6;410:3;405;383:39;:::i;:::-;102:326;7:421;;;;;:::o;448:355::-;515:5;564:3;557:4;549:6;545:17;541:27;531:122;;572:79;;:::i;:::-;531:122;682:6;676:13;707:90;793:3;785:6;778:4;770:6;766:17;707:90;:::i;:::-;698:99;;521:282;448:355;;;;:::o;809:853::-;908:6;916;965:2;953:9;944:7;940:23;936:32;933:119;;;971:79;;:::i;:::-;933:119;1112:1;1101:9;1097:17;1091:24;1142:18;1134:6;1131:30;1128:117;;;1164:79;;:::i;:::-;1128:117;1269:74;1335:7;1326:6;1315:9;1311:22;1269:74;:::i;:::-;1259:84;;1062:291;1413:2;1402:9;1398:18;1392:25;1444:18;1436:6;1433:30;1430:117;;;1466:79;;:::i;:::-;1430:117;1571:74;1637:7;1628:6;1617:9;1613:22;1571:74;:::i;:::-;1561:84;;1363:292;809:853;;;;;:::o;1668:129::-;1702:6;1729:20;;:::i;:::-;1719:30;;1758:33;1786:4;1778:6;1758:33;:::i;:::-;1668:129;;;:::o;1803:75::-;1836:6;1869:2;1863:9;1853:19;;1803:75;:::o;1884:308::-;1946:4;2036:18;2028:6;2025:30;2022:56;;;2058:18;;:::i;:::-;2022:56;2096:29;2118:6;2096:29;:::i;:::-;2088:37;;2180:4;2174;2170:15;2162:23;;1884:308;;;:::o;2198:307::-;2266:1;2276:113;2290:6;2287:1;2284:13;2276:113;;;2375:1;2370:3;2366:11;2360:18;2356:1;2351:3;2347:11;2340:39;2312:2;2309:1;2305:10;2300:15;;2276:113;;;2407:6;2404:1;2401:13;2398:101;;;2487:1;2478:6;2473:3;2469:16;2462:27;2398:101;2247:258;2198:307;;;:::o;2511:320::-;2555:6;2592:1;2586:4;2582:12;2572:22;;2639:1;2633:4;2629:12;2660:18;2650:81;;2716:4;2708:6;2704:17;2694:27;;2650:81;2778:2;2770:6;2767:14;2747:18;2744:38;2741:84;;;2797:18;;:::i;:::-;2741:84;2562:269;2511:320;;;:::o;2837:281::-;2920:27;2942:4;2920:27;:::i;:::-;2912:6;2908:40;3050:6;3038:10;3035:22;3014:18;3002:10;2999:34;2996:62;2993:88;;;3061:18;;:::i;:::-;2993:88;3101:10;3097:2;3090:22;2880:238;2837:281;;:::o;3124:180::-;3172:77;3169:1;3162:88;3269:4;3266:1;3259:15;3293:4;3290:1;3283:15;3310:180;3358:77;3355:1;3348:88;3455:4;3452:1;3445:15;3479:4;3476:1;3469:15;3496:117;3605:1;3602;3595:12;3619:117;3728:1;3725;3718:12;3742:117;3851:1;3848;3841:12;3865:117;3974:1;3971;3964:12;3988:102;4029:6;4080:2;4076:7;4071:2;4064:5;4060:14;4056:28;4046:38;;3988:102;;;:::o;82:1106:2:-;;;;;;;",
  "deployedSourceMap": "82:1106:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3244:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5192:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3093:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5873:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;481:315:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3408:125:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2367:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6594:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3729:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3976:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2156:98;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;4532:13;4548:12;:10;:12::i;:::-;4532:28;;4570:32;4579:5;4586:7;4595:6;4570:8;:32::i;:::-;4619:4;4612:11;;;4433:197;;;;:::o;3244:106::-;3305:7;3331:12;;3324:19;;3244:106;:::o;5192:286::-;5319:4;5335:15;5353:12;:10;:12::i;:::-;5335:30;;5375:38;5391:4;5397:7;5406:6;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;5467:4;5460:11;;;5192:286;;;;;:::o;3093:91::-;3151:5;3175:2;3168:9;;3093:91;:::o;5873:234::-;5961:4;5977:13;5993:12;:10;:12::i;:::-;5977:28;;6015:64;6024:5;6031:7;6068:10;6040:25;6050:5;6057:7;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;:::-;6096:4;6089:11;;;5873:234;;;;:::o;481:315:2:-;597:12;619:27;634:3;639:6;619:14;:27::i;:::-;;678:3;657:40;;666:10;657:40;;;683:6;691:5;657:40;;;;;;;:::i;:::-;;;;;;;;707:15;718:3;707:10;:15::i;:::-;703:72;;;732:36;749:3;754:6;762:5;732:16;:36::i;:::-;703:72;787:4;780:11;;481:315;;;;;:::o;3408:125:5:-;3482:7;3508:9;:18;3518:7;3508:18;;;;;;;;;;;;;;;;3501:25;;3408:125;;;:::o;2367:102::-;2423:13;2455:7;2448:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2367:102;:::o;6594:427::-;6687:4;6703:13;6719:12;:10;:12::i;:::-;6703:28;;6741:24;6768:25;6778:5;6785:7;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;:::-;7010:4;7003:11;;;;6594:427;;;;:::o;3729:189::-;3808:4;3824:13;3840:12;:10;:12::i;:::-;3824:28;;3862;3872:5;3879:2;3883:6;3862:9;:28::i;:::-;3907:4;3900:11;;;3729:189;;;;:::o;3976:149::-;4065:7;4091:11;:18;4103:5;4091:18;;;;;;;;;;;;;;;:27;4110:7;4091:27;;;;;;;;;;;;;;;;4084:34;;3976:149;;;;:::o;640:96:8:-;693:7;719:10;712:17;;640:96;:::o;10110:370:5:-;10258:1;10241:19;;:5;:19;;;;10233:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10338:1;10319:21;;:7;:21;;;;10311:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10420:6;10390:11;:18;10402:5;10390:18;;;;;;;;;;;;;;;:27;10409:7;10390:27;;;;;;;;;;;;;;;:36;;;;10457:7;10441:32;;10450:5;10441:32;;;10466:6;10441:32;;;;;;:::i;:::-;;;;;;;;10110:370;;;:::o;10761:441::-;10891:24;10918:25;10928:5;10935:7;10918:9;:25::i;:::-;10891:52;;10977:17;10957:16;:37;10953:243;;11038:6;11018:16;:26;;11010:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10953:243;10881:321;10761:441;;;:::o;7475:651::-;7617:1;7601:18;;:4;:18;;;;7593:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7693:1;7679:16;;:2;:16;;;;7671:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7746:38;7767:4;7773:2;7777:6;7746:20;:38::i;:::-;7795:19;7817:9;:15;7827:4;7817:15;;;;;;;;;;;;;;;;7795:37;;7865:6;7850:11;:21;;7842:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7980:6;7966:11;:20;7948:9;:15;7958:4;7948:15;;;;;;;;;;;;;;;:38;;;;8023:6;8006:9;:13;8016:2;8006:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;8060:2;8045:26;;8054:4;8045:26;;;8064:6;8045:26;;;;;;:::i;:::-;;;;;;;;8082:37;8102:4;8108:2;8112:6;8082:19;:37::i;:::-;7583:543;7475:651;;;:::o;1018:167:2:-;1078:12;1100:11;1150:5;1138:18;1128:28;;1179:1;1170:6;:10;1163:17;;;1018:167;;;:::o;815:199::-;907:23;948:3;907:45;;958:8;:24;;;983:10;995:6;1003:5;958:51;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;901:113;815:199;;;:::o;11786:121:5:-;;;;:::o;12495:120::-;;;;:::o;7:410:9:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:112;;;280:79;;:::i;:::-;249:112;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;7:410;;;;;:::o;423:139::-;469:5;507:6;494:20;485:29;;523:33;550:5;523:33;:::i;:::-;423:139;;;;:::o;581:338::-;636:5;685:3;678:4;670:6;666:17;662:27;652:122;;693:79;;:::i;:::-;652:122;810:6;797:20;835:78;909:3;901:6;894:4;886:6;882:17;835:78;:::i;:::-;826:87;;642:277;581:338;;;;:::o;925:139::-;971:5;1009:6;996:20;987:29;;1025:33;1052:5;1025:33;:::i;:::-;925:139;;;;:::o;1070:329::-;1129:6;1178:2;1166:9;1157:7;1153:23;1149:32;1146:119;;;1184:79;;:::i;:::-;1146:119;1304:1;1329:53;1374:7;1365:6;1354:9;1350:22;1329:53;:::i;:::-;1319:63;;1275:117;1070:329;;;;:::o;1405:474::-;1473:6;1481;1530:2;1518:9;1509:7;1505:23;1501:32;1498:119;;;1536:79;;:::i;:::-;1498:119;1656:1;1681:53;1726:7;1717:6;1706:9;1702:22;1681:53;:::i;:::-;1671:63;;1627:117;1783:2;1809:53;1854:7;1845:6;1834:9;1830:22;1809:53;:::i;:::-;1799:63;;1754:118;1405:474;;;;;:::o;1885:619::-;1962:6;1970;1978;2027:2;2015:9;2006:7;2002:23;1998:32;1995:119;;;2033:79;;:::i;:::-;1995:119;2153:1;2178:53;2223:7;2214:6;2203:9;2199:22;2178:53;:::i;:::-;2168:63;;2124:117;2280:2;2306:53;2351:7;2342:6;2331:9;2327:22;2306:53;:::i;:::-;2296:63;;2251:118;2408:2;2434:53;2479:7;2470:6;2459:9;2455:22;2434:53;:::i;:::-;2424:63;;2379:118;1885:619;;;;;:::o;2510:474::-;2578:6;2586;2635:2;2623:9;2614:7;2610:23;2606:32;2603:119;;;2641:79;;:::i;:::-;2603:119;2761:1;2786:53;2831:7;2822:6;2811:9;2807:22;2786:53;:::i;:::-;2776:63;;2732:117;2888:2;2914:53;2959:7;2950:6;2939:9;2935:22;2914:53;:::i;:::-;2904:63;;2859:118;2510:474;;;;;:::o;2990:797::-;3076:6;3084;3092;3141:2;3129:9;3120:7;3116:23;3112:32;3109:119;;;3147:79;;:::i;:::-;3109:119;3267:1;3292:53;3337:7;3328:6;3317:9;3313:22;3292:53;:::i;:::-;3282:63;;3238:117;3394:2;3420:53;3465:7;3456:6;3445:9;3441:22;3420:53;:::i;:::-;3410:63;;3365:118;3550:2;3539:9;3535:18;3522:32;3581:18;3573:6;3570:30;3567:117;;;3603:79;;:::i;:::-;3567:117;3708:62;3762:7;3753:6;3742:9;3738:22;3708:62;:::i;:::-;3698:72;;3493:287;2990:797;;;;;:::o;3793:118::-;3880:24;3898:5;3880:24;:::i;:::-;3875:3;3868:37;3793:118;;:::o;3917:109::-;3998:21;4013:5;3998:21;:::i;:::-;3993:3;3986:34;3917:109;;:::o;4032:360::-;4118:3;4146:38;4178:5;4146:38;:::i;:::-;4200:70;4263:6;4258:3;4200:70;:::i;:::-;4193:77;;4279:52;4324:6;4319:3;4312:4;4305:5;4301:16;4279:52;:::i;:::-;4356:29;4378:6;4356:29;:::i;:::-;4351:3;4347:39;4340:46;;4122:270;4032:360;;;;:::o;4398:364::-;4486:3;4514:39;4547:5;4514:39;:::i;:::-;4569:71;4633:6;4628:3;4569:71;:::i;:::-;4562:78;;4649:52;4694:6;4689:3;4682:4;4675:5;4671:16;4649:52;:::i;:::-;4726:29;4748:6;4726:29;:::i;:::-;4721:3;4717:39;4710:46;;4490:272;4398:364;;;;:::o;4768:366::-;4910:3;4931:67;4995:2;4990:3;4931:67;:::i;:::-;4924:74;;5007:93;5096:3;5007:93;:::i;:::-;5125:2;5120:3;5116:12;5109:19;;4768:366;;;:::o;5140:::-;5282:3;5303:67;5367:2;5362:3;5303:67;:::i;:::-;5296:74;;5379:93;5468:3;5379:93;:::i;:::-;5497:2;5492:3;5488:12;5481:19;;5140:366;;;:::o;5512:::-;5654:3;5675:67;5739:2;5734:3;5675:67;:::i;:::-;5668:74;;5751:93;5840:3;5751:93;:::i;:::-;5869:2;5864:3;5860:12;5853:19;;5512:366;;;:::o;5884:::-;6026:3;6047:67;6111:2;6106:3;6047:67;:::i;:::-;6040:74;;6123:93;6212:3;6123:93;:::i;:::-;6241:2;6236:3;6232:12;6225:19;;5884:366;;;:::o;6256:::-;6398:3;6419:67;6483:2;6478:3;6419:67;:::i;:::-;6412:74;;6495:93;6584:3;6495:93;:::i;:::-;6613:2;6608:3;6604:12;6597:19;;6256:366;;;:::o;6628:::-;6770:3;6791:67;6855:2;6850:3;6791:67;:::i;:::-;6784:74;;6867:93;6956:3;6867:93;:::i;:::-;6985:2;6980:3;6976:12;6969:19;;6628:366;;;:::o;7000:::-;7142:3;7163:67;7227:2;7222:3;7163:67;:::i;:::-;7156:74;;7239:93;7328:3;7239:93;:::i;:::-;7357:2;7352:3;7348:12;7341:19;;7000:366;;;:::o;7372:118::-;7459:24;7477:5;7459:24;:::i;:::-;7454:3;7447:37;7372:118;;:::o;7496:112::-;7579:22;7595:5;7579:22;:::i;:::-;7574:3;7567:35;7496:112;;:::o;7614:529::-;7781:4;7819:2;7808:9;7804:18;7796:26;;7832:71;7900:1;7889:9;7885:17;7876:6;7832:71;:::i;:::-;7913:72;7981:2;7970:9;7966:18;7957:6;7913:72;:::i;:::-;8032:9;8026:4;8022:20;8017:2;8006:9;8002:18;7995:48;8060:76;8131:4;8122:6;8060:76;:::i;:::-;8052:84;;7614:529;;;;;;:::o;8149:210::-;8236:4;8274:2;8263:9;8259:18;8251:26;;8287:65;8349:1;8338:9;8334:17;8325:6;8287:65;:::i;:::-;8149:210;;;;:::o;8365:313::-;8478:4;8516:2;8505:9;8501:18;8493:26;;8565:9;8559:4;8555:20;8551:1;8540:9;8536:17;8529:47;8593:78;8666:4;8657:6;8593:78;:::i;:::-;8585:86;;8365:313;;;;:::o;8684:419::-;8850:4;8888:2;8877:9;8873:18;8865:26;;8937:9;8931:4;8927:20;8923:1;8912:9;8908:17;8901:47;8965:131;9091:4;8965:131;:::i;:::-;8957:139;;8684:419;;;:::o;9109:::-;9275:4;9313:2;9302:9;9298:18;9290:26;;9362:9;9356:4;9352:20;9348:1;9337:9;9333:17;9326:47;9390:131;9516:4;9390:131;:::i;:::-;9382:139;;9109:419;;;:::o;9534:::-;9700:4;9738:2;9727:9;9723:18;9715:26;;9787:9;9781:4;9777:20;9773:1;9762:9;9758:17;9751:47;9815:131;9941:4;9815:131;:::i;:::-;9807:139;;9534:419;;;:::o;9959:::-;10125:4;10163:2;10152:9;10148:18;10140:26;;10212:9;10206:4;10202:20;10198:1;10187:9;10183:17;10176:47;10240:131;10366:4;10240:131;:::i;:::-;10232:139;;9959:419;;;:::o;10384:::-;10550:4;10588:2;10577:9;10573:18;10565:26;;10637:9;10631:4;10627:20;10623:1;10612:9;10608:17;10601:47;10665:131;10791:4;10665:131;:::i;:::-;10657:139;;10384:419;;;:::o;10809:::-;10975:4;11013:2;11002:9;10998:18;10990:26;;11062:9;11056:4;11052:20;11048:1;11037:9;11033:17;11026:47;11090:131;11216:4;11090:131;:::i;:::-;11082:139;;10809:419;;;:::o;11234:::-;11400:4;11438:2;11427:9;11423:18;11415:26;;11487:9;11481:4;11477:20;11473:1;11462:9;11458:17;11451:47;11515:131;11641:4;11515:131;:::i;:::-;11507:139;;11234:419;;;:::o;11659:222::-;11752:4;11790:2;11779:9;11775:18;11767:26;;11803:71;11871:1;11860:9;11856:17;11847:6;11803:71;:::i;:::-;11659:222;;;;:::o;11887:419::-;12026:4;12064:2;12053:9;12049:18;12041:26;;12077:71;12145:1;12134:9;12130:17;12121:6;12077:71;:::i;:::-;12195:9;12189:4;12185:20;12180:2;12169:9;12165:18;12158:48;12223:76;12294:4;12285:6;12223:76;:::i;:::-;12215:84;;11887:419;;;;;:::o;12312:214::-;12401:4;12439:2;12428:9;12424:18;12416:26;;12452:67;12516:1;12505:9;12501:17;12492:6;12452:67;:::i;:::-;12312:214;;;;:::o;12532:129::-;12566:6;12593:20;;:::i;:::-;12583:30;;12622:33;12650:4;12642:6;12622:33;:::i;:::-;12532:129;;;:::o;12667:75::-;12700:6;12733:2;12727:9;12717:19;;12667:75;:::o;12748:307::-;12809:4;12899:18;12891:6;12888:30;12885:56;;;12921:18;;:::i;:::-;12885:56;12959:29;12981:6;12959:29;:::i;:::-;12951:37;;13043:4;13037;13033:15;13025:23;;12748:307;;;:::o;13061:98::-;13112:6;13146:5;13140:12;13130:22;;13061:98;;;:::o;13165:99::-;13217:6;13251:5;13245:12;13235:22;;13165:99;;;:::o;13270:168::-;13353:11;13387:6;13382:3;13375:19;13427:4;13422:3;13418:14;13403:29;;13270:168;;;;:::o;13444:169::-;13528:11;13562:6;13557:3;13550:19;13602:4;13597:3;13593:14;13578:29;;13444:169;;;;:::o;13619:305::-;13659:3;13678:20;13696:1;13678:20;:::i;:::-;13673:25;;13712:20;13730:1;13712:20;:::i;:::-;13707:25;;13866:1;13798:66;13794:74;13791:1;13788:81;13785:107;;;13872:18;;:::i;:::-;13785:107;13916:1;13913;13909:9;13902:16;;13619:305;;;;:::o;13930:96::-;13967:7;13996:24;14014:5;13996:24;:::i;:::-;13985:35;;13930:96;;;:::o;14032:90::-;14066:7;14109:5;14102:13;14095:21;14084:32;;14032:90;;;:::o;14128:126::-;14165:7;14205:42;14198:5;14194:54;14183:65;;14128:126;;;:::o;14260:77::-;14297:7;14326:5;14315:16;;14260:77;;;:::o;14343:86::-;14378:7;14418:4;14411:5;14407:16;14396:27;;14343:86;;;:::o;14435:154::-;14519:6;14514:3;14509;14496:30;14581:1;14572:6;14567:3;14563:16;14556:27;14435:154;;;:::o;14595:307::-;14663:1;14673:113;14687:6;14684:1;14681:13;14673:113;;;14772:1;14767:3;14763:11;14757:18;14753:1;14748:3;14744:11;14737:39;14709:2;14706:1;14702:10;14697:15;;14673:113;;;14804:6;14801:1;14798:13;14795:101;;;14884:1;14875:6;14870:3;14866:16;14859:27;14795:101;14644:258;14595:307;;;:::o;14908:320::-;14952:6;14989:1;14983:4;14979:12;14969:22;;15036:1;15030:4;15026:12;15057:18;15047:81;;15113:4;15105:6;15101:17;15091:27;;15047:81;15175:2;15167:6;15164:14;15144:18;15141:38;15138:84;;;15194:18;;:::i;:::-;15138:84;14959:269;14908:320;;;:::o;15234:281::-;15317:27;15339:4;15317:27;:::i;:::-;15309:6;15305:40;15447:6;15435:10;15432:22;15411:18;15399:10;15396:34;15393:62;15390:88;;;15458:18;;:::i;:::-;15390:88;15498:10;15494:2;15487:22;15277:238;15234:281;;:::o;15521:180::-;15569:77;15566:1;15559:88;15666:4;15663:1;15656:15;15690:4;15687:1;15680:15;15707:180;15755:77;15752:1;15745:88;15852:4;15849:1;15842:15;15876:4;15873:1;15866:15;15893:180;15941:77;15938:1;15931:88;16038:4;16035:1;16028:15;16062:4;16059:1;16052:15;16079:117;16188:1;16185;16178:12;16202:117;16311:1;16308;16301:12;16325:117;16434:1;16431;16424:12;16448:117;16557:1;16554;16547:12;16571:102;16612:6;16663:2;16659:7;16654:2;16647:5;16643:14;16639:28;16629:38;;16571:102;;;:::o;16679:222::-;16819:34;16815:1;16807:6;16803:14;16796:58;16888:5;16883:2;16875:6;16871:15;16864:30;16679:222;:::o;16907:221::-;17047:34;17043:1;17035:6;17031:14;17024:58;17116:4;17111:2;17103:6;17099:15;17092:29;16907:221;:::o;17134:179::-;17274:31;17270:1;17262:6;17258:14;17251:55;17134:179;:::o;17319:225::-;17459:34;17455:1;17447:6;17443:14;17436:58;17528:8;17523:2;17515:6;17511:15;17504:33;17319:225;:::o;17550:224::-;17690:34;17686:1;17678:6;17674:14;17667:58;17759:7;17754:2;17746:6;17742:15;17735:32;17550:224;:::o;17780:223::-;17920:34;17916:1;17908:6;17904:14;17897:58;17989:6;17984:2;17976:6;17972:15;17965:31;17780:223;:::o;18009:224::-;18149:34;18145:1;18137:6;18133:14;18126:58;18218:7;18213:2;18205:6;18201:15;18194:32;18009:224;:::o;18239:122::-;18312:24;18330:5;18312:24;:::i;:::-;18305:5;18302:35;18292:63;;18351:1;18348;18341:12;18292:63;18239:122;:::o;18367:::-;18440:24;18458:5;18440:24;:::i;:::-;18433:5;18430:35;18420:63;;18479:1;18476;18469:12;18420:63;18367:122;:::o",
  "source": "pragma solidity ^0.8.7;\n\n\nimport \"./ERC677.sol\";\nimport \"./ERC677Receiver.sol\";\n\n\ncontract ERC677Token is ERC677 {\n\n   constructor(string memory _name,string memory _symbol) public ERC677(_name,_symbol) {}\n\n  /**\n  * @dev transfer token to a contract address with additional data if the recipient is a contact.\n  * @param _to The address to transfer to.\n  * @param _value The amount to be transferred.\n  * @param _data The extra data to be passed to the receiving contract.\n  */\n  function transferAndCall(address _to, uint _value, bytes memory _data)\n    public virtual\n    override\n    returns (bool success)\n  {\n    super.transfer(_to, _value);\n    emit Transfer(msg.sender, _to, _value, _data);\n    if (isContract(_to)) {\n      contractFallback(_to, _value, _data);\n    }\n    return true;\n  }\n\n\n  // PRIVATE\n\n  function contractFallback(address _to, uint _value, bytes memory _data)\n    private\n  {\n    ERC677Receiver receiver = ERC677Receiver(_to);\n    receiver.onTokenTransfer(msg.sender, _value, _data);\n  }\n\n  function isContract(address _addr)\n    private\n    returns (bool hasCode)\n  {\n    uint length;\n    assembly { length := extcodesize(_addr) }\n    return length > 0;\n  }\n\n}\n",
  "sourcePath": "/home/neo/blockfuck/git/all_reentrancy_in_one_repo/erc677_reentrancy/contracts/ERC677/ERC677Token.sol",
  "ast": {
    "absolutePath": "/home/neo/blockfuck/git/all_reentrancy_in_one_repo/erc677_reentrancy/contracts/ERC677/ERC677Token.sol",
    "exportedSymbols": {
      "Context": [
        1032
      ],
      "ERC20": [
        907
      ],
      "ERC677": [
        39
      ],
      "ERC677Receiver": [
        51
      ],
      "ERC677Token": [
        154
      ],
      "IERC20": [
        985
      ],
      "IERC20Metadata": [
        1010
      ]
    },
    "id": 155,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 53,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/home/neo/blockfuck/git/all_reentrancy_in_one_repo/erc677_reentrancy/contracts/ERC677/ERC677.sol",
        "file": "./ERC677.sol",
        "id": 54,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 155,
        "sourceUnit": 40,
        "src": "26:22:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/neo/blockfuck/git/all_reentrancy_in_one_repo/erc677_reentrancy/contracts/ERC677/ERC677Receiver.sol",
        "file": "./ERC677Receiver.sol",
        "id": 55,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 155,
        "sourceUnit": 52,
        "src": "49:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 56,
              "name": "ERC677",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39,
              "src": "106:6:2"
            },
            "id": 57,
            "nodeType": "InheritanceSpecifier",
            "src": "106:6:2"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 154,
        "linearizedBaseContracts": [
          154,
          39,
          907,
          1010,
          985,
          1032
        ],
        "name": "ERC677Token",
        "nameLocation": "91:11:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 68,
              "nodeType": "Block",
              "src": "203:2:2",
              "statements": []
            },
            "id": 69,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 64,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 59,
                    "src": "188:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 65,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 61,
                    "src": "194:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 66,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 63,
                  "name": "ERC677",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 39,
                  "src": "181:6:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "181:21:2"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "145:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "131:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "131:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "165:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "151:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "151:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "130:43:2"
            },
            "returnParameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "203:0:2"
            },
            "scope": 154,
            "src": "119:86:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              28
            ],
            "body": {
              "id": 110,
              "nodeType": "Block",
              "src": "613:183:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "634:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 86,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "639:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 82,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "619:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC677Token_$154_$",
                          "typeString": "type(contract super ERC677Token)"
                        }
                      },
                      "id": 84,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 445,
                      "src": "619:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "619:27:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "619:27:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 90,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "666:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "666:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 92,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "678:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 93,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "683:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 94,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76,
                        "src": "691:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 89,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        38,
                        919
                      ],
                      "referencedDeclaration": 38,
                      "src": "657:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "657:40:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 96,
                  "nodeType": "EmitStatement",
                  "src": "652:45:2"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 98,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "718:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 97,
                      "name": "isContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153,
                      "src": "707:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) returns (bool)"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "707:15:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 107,
                  "nodeType": "IfStatement",
                  "src": "703:72:2",
                  "trueBody": {
                    "id": 106,
                    "nodeType": "Block",
                    "src": "724:51:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 101,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 72,
                              "src": "749:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 102,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74,
                              "src": "754:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 103,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76,
                              "src": "762:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 100,
                            "name": "contractFallback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 137,
                            "src": "732:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,uint256,bytes memory)"
                            }
                          },
                          "id": 104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "732:36:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 105,
                        "nodeType": "ExpressionStatement",
                        "src": "732:36:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "787:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 81,
                  "id": 109,
                  "nodeType": "Return",
                  "src": "780:11:2"
                }
              ]
            },
            "documentation": {
              "id": 70,
              "nodeType": "StructuredDocumentation",
              "src": "209:269:2",
              "text": " @dev transfer token to a contract address with additional data if the recipient is a contact.\n @param _to The address to transfer to.\n @param _value The amount to be transferred.\n @param _data The extra data to be passed to the receiving contract."
            },
            "functionSelector": "4000aea0",
            "id": 111,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferAndCall",
            "nameLocation": "490:15:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 78,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "575:8:2"
            },
            "parameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "514:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "506:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "506:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "524:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "519:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "519:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "545:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "532:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "532:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "505:46:2"
            },
            "returnParameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "602:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "597:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "597:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "596:14:2"
            },
            "scope": 154,
            "src": "481:315:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 136,
              "nodeType": "Block",
              "src": "901:113:2",
              "statements": [
                {
                  "assignments": [
                    122
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 122,
                      "mutability": "mutable",
                      "name": "receiver",
                      "nameLocation": "922:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 136,
                      "src": "907:23:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC677Receiver_$51",
                        "typeString": "contract ERC677Receiver"
                      },
                      "typeName": {
                        "id": 121,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 120,
                          "name": "ERC677Receiver",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 51,
                          "src": "907:14:2"
                        },
                        "referencedDeclaration": 51,
                        "src": "907:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC677Receiver_$51",
                          "typeString": "contract ERC677Receiver"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 126,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 124,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "948:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 123,
                      "name": "ERC677Receiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "933:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC677Receiver_$51_$",
                        "typeString": "type(contract ERC677Receiver)"
                      }
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "933:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC677Receiver_$51",
                      "typeString": "contract ERC677Receiver"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "907:45:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 130,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "983:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "983:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 132,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 115,
                        "src": "995:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 133,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 117,
                        "src": "1003:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 127,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122,
                        "src": "958:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC677Receiver_$51",
                          "typeString": "contract ERC677Receiver"
                        }
                      },
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "onTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50,
                      "src": "958:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory) external"
                      }
                    },
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "958:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135,
                  "nodeType": "ExpressionStatement",
                  "src": "958:51:2"
                }
              ]
            },
            "id": 137,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractFallback",
            "nameLocation": "824:16:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 113,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "849:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "841:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "841:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 115,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "859:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "854:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "854:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 117,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "880:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "867:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "867:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "840:46:2"
            },
            "returnParameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "901:0:2"
            },
            "scope": 154,
            "src": "815:199:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 152,
              "nodeType": "Block",
              "src": "1094:91:2",
              "statements": [
                {
                  "assignments": [
                    145
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 145,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "1105:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 152,
                      "src": "1100:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 144,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1100:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 146,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1100:11:2"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1126:32:2",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1128:28:2",
                        "value": {
                          "arguments": [
                            {
                              "name": "_addr",
                              "nodeType": "YulIdentifier",
                              "src": "1150:5:2"
                            }
                          ],
                          "functionName": {
                            "name": "extcodesize",
                            "nodeType": "YulIdentifier",
                            "src": "1138:11:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1138:18:2"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1128:6:2"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 139,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1150:5:2",
                      "valueSize": 1
                    },
                    {
                      "declaration": 145,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1128:6:2",
                      "valueSize": 1
                    }
                  ],
                  "id": 147,
                  "nodeType": "InlineAssembly",
                  "src": "1117:41:2"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 148,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "1170:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1179:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1170:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 143,
                  "id": 151,
                  "nodeType": "Return",
                  "src": "1163:17:2"
                }
              ]
            },
            "id": 153,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nameLocation": "1027:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nameLocation": "1046:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 153,
                  "src": "1038:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1038:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1037:15:2"
            },
            "returnParameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 142,
                  "mutability": "mutable",
                  "name": "hasCode",
                  "nameLocation": "1083:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 153,
                  "src": "1078:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 141,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1078:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1077:14:2"
            },
            "scope": 154,
            "src": "1018:167:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 155,
        "src": "82:1106:2",
        "usedErrors": []
      }
    ],
    "src": "0:1189:2"
  },
  "legacyAST": {
    "absolutePath": "/home/neo/blockfuck/git/all_reentrancy_in_one_repo/erc677_reentrancy/contracts/ERC677/ERC677Token.sol",
    "exportedSymbols": {
      "Context": [
        1032
      ],
      "ERC20": [
        907
      ],
      "ERC677": [
        39
      ],
      "ERC677Receiver": [
        51
      ],
      "ERC677Token": [
        154
      ],
      "IERC20": [
        985
      ],
      "IERC20Metadata": [
        1010
      ]
    },
    "id": 155,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 53,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/home/neo/blockfuck/git/all_reentrancy_in_one_repo/erc677_reentrancy/contracts/ERC677/ERC677.sol",
        "file": "./ERC677.sol",
        "id": 54,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 155,
        "sourceUnit": 40,
        "src": "26:22:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/neo/blockfuck/git/all_reentrancy_in_one_repo/erc677_reentrancy/contracts/ERC677/ERC677Receiver.sol",
        "file": "./ERC677Receiver.sol",
        "id": 55,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 155,
        "sourceUnit": 52,
        "src": "49:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 56,
              "name": "ERC677",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39,
              "src": "106:6:2"
            },
            "id": 57,
            "nodeType": "InheritanceSpecifier",
            "src": "106:6:2"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 154,
        "linearizedBaseContracts": [
          154,
          39,
          907,
          1010,
          985,
          1032
        ],
        "name": "ERC677Token",
        "nameLocation": "91:11:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 68,
              "nodeType": "Block",
              "src": "203:2:2",
              "statements": []
            },
            "id": 69,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 64,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 59,
                    "src": "188:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 65,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 61,
                    "src": "194:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 66,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 63,
                  "name": "ERC677",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 39,
                  "src": "181:6:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "181:21:2"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "145:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "131:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "131:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "165:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "151:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "151:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "130:43:2"
            },
            "returnParameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "203:0:2"
            },
            "scope": 154,
            "src": "119:86:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              28
            ],
            "body": {
              "id": 110,
              "nodeType": "Block",
              "src": "613:183:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "634:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 86,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "639:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 82,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "619:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC677Token_$154_$",
                          "typeString": "type(contract super ERC677Token)"
                        }
                      },
                      "id": 84,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 445,
                      "src": "619:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "619:27:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "619:27:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 90,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "666:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "666:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 92,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "678:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 93,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "683:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 94,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76,
                        "src": "691:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 89,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        38,
                        919
                      ],
                      "referencedDeclaration": 38,
                      "src": "657:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "657:40:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 96,
                  "nodeType": "EmitStatement",
                  "src": "652:45:2"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 98,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "718:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 97,
                      "name": "isContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153,
                      "src": "707:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) returns (bool)"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "707:15:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 107,
                  "nodeType": "IfStatement",
                  "src": "703:72:2",
                  "trueBody": {
                    "id": 106,
                    "nodeType": "Block",
                    "src": "724:51:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 101,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 72,
                              "src": "749:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 102,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74,
                              "src": "754:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 103,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76,
                              "src": "762:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 100,
                            "name": "contractFallback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 137,
                            "src": "732:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,uint256,bytes memory)"
                            }
                          },
                          "id": 104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "732:36:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 105,
                        "nodeType": "ExpressionStatement",
                        "src": "732:36:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "787:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 81,
                  "id": 109,
                  "nodeType": "Return",
                  "src": "780:11:2"
                }
              ]
            },
            "documentation": {
              "id": 70,
              "nodeType": "StructuredDocumentation",
              "src": "209:269:2",
              "text": " @dev transfer token to a contract address with additional data if the recipient is a contact.\n @param _to The address to transfer to.\n @param _value The amount to be transferred.\n @param _data The extra data to be passed to the receiving contract."
            },
            "functionSelector": "4000aea0",
            "id": 111,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferAndCall",
            "nameLocation": "490:15:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 78,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "575:8:2"
            },
            "parameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "514:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "506:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "506:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "524:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "519:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "519:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "545:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "532:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "532:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "505:46:2"
            },
            "returnParameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "602:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "597:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "597:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "596:14:2"
            },
            "scope": 154,
            "src": "481:315:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 136,
              "nodeType": "Block",
              "src": "901:113:2",
              "statements": [
                {
                  "assignments": [
                    122
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 122,
                      "mutability": "mutable",
                      "name": "receiver",
                      "nameLocation": "922:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 136,
                      "src": "907:23:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC677Receiver_$51",
                        "typeString": "contract ERC677Receiver"
                      },
                      "typeName": {
                        "id": 121,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 120,
                          "name": "ERC677Receiver",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 51,
                          "src": "907:14:2"
                        },
                        "referencedDeclaration": 51,
                        "src": "907:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC677Receiver_$51",
                          "typeString": "contract ERC677Receiver"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 126,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 124,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "948:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 123,
                      "name": "ERC677Receiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "933:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC677Receiver_$51_$",
                        "typeString": "type(contract ERC677Receiver)"
                      }
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "933:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC677Receiver_$51",
                      "typeString": "contract ERC677Receiver"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "907:45:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 130,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "983:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "983:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 132,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 115,
                        "src": "995:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 133,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 117,
                        "src": "1003:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 127,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122,
                        "src": "958:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC677Receiver_$51",
                          "typeString": "contract ERC677Receiver"
                        }
                      },
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "onTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50,
                      "src": "958:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory) external"
                      }
                    },
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "958:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135,
                  "nodeType": "ExpressionStatement",
                  "src": "958:51:2"
                }
              ]
            },
            "id": 137,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractFallback",
            "nameLocation": "824:16:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 113,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "849:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "841:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "841:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 115,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "859:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "854:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "854:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 117,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "880:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "867:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "867:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "840:46:2"
            },
            "returnParameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "901:0:2"
            },
            "scope": 154,
            "src": "815:199:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 152,
              "nodeType": "Block",
              "src": "1094:91:2",
              "statements": [
                {
                  "assignments": [
                    145
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 145,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "1105:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 152,
                      "src": "1100:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 144,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1100:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 146,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1100:11:2"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1126:32:2",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1128:28:2",
                        "value": {
                          "arguments": [
                            {
                              "name": "_addr",
                              "nodeType": "YulIdentifier",
                              "src": "1150:5:2"
                            }
                          ],
                          "functionName": {
                            "name": "extcodesize",
                            "nodeType": "YulIdentifier",
                            "src": "1138:11:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1138:18:2"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1128:6:2"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 139,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1150:5:2",
                      "valueSize": 1
                    },
                    {
                      "declaration": 145,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1128:6:2",
                      "valueSize": 1
                    }
                  ],
                  "id": 147,
                  "nodeType": "InlineAssembly",
                  "src": "1117:41:2"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 148,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "1170:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1179:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1170:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 143,
                  "id": 151,
                  "nodeType": "Return",
                  "src": "1163:17:2"
                }
              ]
            },
            "id": 153,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nameLocation": "1027:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nameLocation": "1046:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 153,
                  "src": "1038:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1038:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1037:15:2"
            },
            "returnParameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 142,
                  "mutability": "mutable",
                  "name": "hasCode",
                  "nameLocation": "1083:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 153,
                  "src": "1078:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 141,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1078:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1077:14:2"
            },
            "scope": 154,
            "src": "1018:167:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 155,
        "src": "82:1106:2",
        "usedErrors": []
      }
    ],
    "src": "0:1189:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.2-next.0",
  "updatedAt": "2022-11-04T12:09:20.021Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferAndCall(address,uint256,bytes)": {
        "details": "transfer token to a contract address with additional data if the recipient is a contact.",
        "params": {
          "_data": "The extra data to be passed to the receiving contract.",
          "_to": "The address to transfer to.",
          "_value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}